<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>sip</title>
      <link href="/2019/11/19/sip/"/>
      <url>/2019/11/19/sip/</url>
      
        <content type="html"><![CDATA[<p>sip,类似http的文本协议，也有状态码，异步，一个 SIP请求可能导致生成一个或多个请求<br>SIP包有三个主要部分：Request-Line(表示是请求信息)，Message Header(SIP包的消息头哉)，Message Body(SIP包的消息主体)<br>sip消息两种，request，respond</p><p>请求头–Request:INVITE sip: <a href="mailto:&#48;&#49;&#x35;&#x42;&#48;&#x30;&#x38;&#49;&#x35;&#x38;&#55;&#x33;&#49;&#x30;&#x30;&#48;&#55;&#48;&#48;&#48;&#68;&#x30;&#48;&#x30;&#48;&#x43;&#53;&#x37;&#56;&#64;&#49;&#x39;&#50;&#x2e;&#x31;&#x36;&#x38;&#46;&#50;&#46;&#x34;&#48;">&#48;&#49;&#x35;&#x42;&#48;&#x30;&#x38;&#49;&#x35;&#x38;&#55;&#x33;&#49;&#x30;&#x30;&#48;&#55;&#48;&#48;&#48;&#68;&#x30;&#48;&#x30;&#48;&#x43;&#53;&#x37;&#56;&#64;&#49;&#x39;&#50;&#x2e;&#x31;&#x36;&#x38;&#46;&#50;&#46;&#x34;&#48;</a><br>Status: 100 Trying &#x2F;Status: 180 Ring<br>Status:200 OK<br>Request:BYE sip: <a href="mailto:&#x30;&#49;&#x35;&#x42;&#48;&#48;&#56;&#49;&#x35;&#x38;&#55;&#51;&#49;&#48;&#x30;&#x30;&#x37;&#x30;&#x30;&#x30;&#68;&#x30;&#48;&#x30;&#48;&#x43;&#53;&#x37;&#x38;&#64;&#49;&#57;&#50;&#x2e;&#49;&#54;&#56;&#46;&#x32;&#x2e;&#52;&#x30;">&#x30;&#49;&#x35;&#x42;&#48;&#48;&#56;&#49;&#x35;&#x38;&#55;&#51;&#49;&#48;&#x30;&#x30;&#x37;&#x30;&#x30;&#x30;&#68;&#x30;&#48;&#x30;&#48;&#x43;&#53;&#x37;&#x38;&#64;&#49;&#57;&#50;&#x2e;&#49;&#54;&#56;&#46;&#x32;&#x2e;&#52;&#x30;</a></p><p>sip协议，交互时许<br><img src="/sip%E5%8D%8F%E8%AE%AE.png" alt="sip"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>js常识</title>
      <link href="/2019/11/01/js/"/>
      <url>/2019/11/01/js/</url>
      
        <content type="html"><![CDATA[<p>js web api, 比如常用的<code>document.getElementById()</code>，<code>fetch</code>, <code>new Promise()</code>等等方法</p><p>(Web APIs)[<a href="https://developer.mozilla.org/en-US/docs/Web/API]">https://developer.mozilla.org/en-US/docs/Web/API]</a></p><p>标准js内置对象,函数等等，JSON，Math，parseInt()</p><p>(Standard built-in objects)[<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects]">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects]</a></p><p>js语法，let,const,var等等<br>(Statements and declarations)[<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements]">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements]</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>eclipse-java</title>
      <link href="/2019/11/01/eclipse-java/"/>
      <url>/2019/11/01/eclipse-java/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.eclipse.org/downloads/packages/">Eclipse Packages</a></p><p><a href="https://projectlombok.org/downloads/lombok.jar">lombok</a><br>lombok.jar to eclipse.exe folder</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//eclipse.ini tail add</span><br><span class="line">-javaagent:D:\java\eclipse\lombok.jar</span><br></pre></td></tr></table></figure><p>make eclipse activities desktop icon</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">touch eclipse.desktop</span><br><span class="line">nano eclipse.desktop</span><br><span class="line">[Desktop Entry]</span><br><span class="line">Version=Neon</span><br><span class="line">Name=Eclipse</span><br><span class="line">Comment=Eclipse is an IDE</span><br><span class="line">Exec=/home/li/eclipse/eclipse</span><br><span class="line">Path=/home/li/eclipse/</span><br><span class="line">Icon=/home/li/eclipse/icon.xpm</span><br><span class="line">Terminal=false</span><br><span class="line">Type=Application</span><br><span class="line">Categories=Utility;Application;Development;</span><br><span class="line">mv eclipse.desktop .local/share/applications/</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>vue2 脚手架scaffold</title>
      <link href="/2019/10/31/vue2/"/>
      <url>/2019/10/31/vue2/</url>
      
        <content type="html"><![CDATA[<p><code>node -v</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">npm --registry https://registry.npm.taobao.org install webpack -g</span><br><span class="line">npm --registry https://registry.npm.taobao.org install webpack-cli -g</span><br><span class="line">webpack -v # 4.41.2</span><br><span class="line"></span><br><span class="line">npm --registry https://registry.npm.taobao.org install vue-cli -g</span><br><span class="line">vue -V # 2.9.6</span><br><span class="line"></span><br><span class="line">vue init webpack myadmin  # default setting</span><br><span class="line"></span><br><span class="line">cd myadmin</span><br><span class="line">npm run dev  # http://127.0.0.1:8080</span><br><span class="line"></span><br><span class="line">git init</span><br><span class="line">git config user.name 111</span><br><span class="line">git config user.email 1@1.com</span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;init&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>node-sass</title>
      <link href="/2019/10/31/node-sass/"/>
      <url>/2019/10/31/node-sass/</url>
      
        <content type="html"><![CDATA[<p>node-sass  —&gt;   node-gyp</p><p>node-gyp   —&gt;   windows-build-tools</p><p><a href="https://github.com/nodejs/node-gyp#on-windows">node-gyp#on-windows</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">install visual studio, python2 ?</span><br><span class="line">npm install -g node-gyp</span><br><span class="line">npm install --global --production windows-build-tools # cmd with administrator  or manual setting</span><br><span class="line"></span><br><span class="line"># reinstall</span><br><span class="line">npm uninstall node-sass</span><br><span class="line">npm install node-sass</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> node-sass </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>根据mac的系统app制作vmware可启动镜像</title>
      <link href="/2019/10/24/mac/"/>
      <url>/2019/10/24/mac/</url>
      
        <content type="html"><![CDATA[<p>可以下载各个版本完整系统的软件<a href="http://dosdude1.com/software.html">macOS Patcher</a></p><p>有了系统.app后，制作可启动镜像，第一个的<code>create</code>的size根据镜像大小设置，向上取整，可以设置稍微大一点，最后的<code>convert</code>会生成一个实际大小的镜像</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">hdiutil create -o /tmp/Catalina -size 8000m -layout SPUD -fs HFS+J</span><br><span class="line"></span><br><span class="line">hdiutil attach /tmp/Catalina.dmg -noverify -mountpoint /Volumes/install_build</span><br><span class="line"></span><br><span class="line">sudo /Users/li/Downloads/Install\ macOS\ Catalina\ Beta.app/Contents/Resources/createinstallmedia --volume /Volumes/install_build</span><br><span class="line"></span><br><span class="line">hdiutil detach /Volumes/Install\ macOS\ Catalina\ Beta/</span><br><span class="line"></span><br><span class="line">hdiutil convert /tmp/Catalina.dmg -format UDTO -o ~/Downloads/Catalina</span><br><span class="line"></span><br><span class="line">mv ~/Downloads/Catalina.cdr ~/Downloads/Catalina.iso</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>制作可直接拖到application的dmg镜像installer</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">hdiutil create -o /tmp/Catalina -size 7000m -layout SPUD -fs HFS+J</span><br><span class="line">hdiutil attach /tmp/Catalina.dmg -noverify -mountpoint /Volumes/Catalina_Installer</span><br><span class="line">Copy Catalina.app to /Volumes/Catalina_Installer in finder</span><br><span class="line">cd /Volumes/Catalina_Installer</span><br><span class="line">ln -s /Applications Applications</span><br><span class="line">cd ~</span><br><span class="line">hdiutil detach /Volumes/Catalina_Installer</span><br><span class="line">hdiutil convert -format UDZO -o ~/Downloads/CatalinaInstaller.dmg /tmp/Catalina.dmg</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> -mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python</title>
      <link href="/2019/10/08/python/"/>
      <url>/2019/10/08/python/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.python.org/ftp/python/3.7.4/python-3.7.4-amd64.exe">python-3.7.4-amd64.exe</a></p><p>默认安装,路径<code>C:\Users\winuser\AppData\Local\Programs\Python\Python37</code></p><p>cmd， 试试<code>py</code>或者<code>python</code>，进入python交互式命令&gt;&gt;&gt;,说明安装正常，<code>exit()</code> 退出</p><p>加入环境变量,确保有<code>python -V</code>与<code>pip -V</code><br>python.exe <code>C:\Users\winuser\AppData\Local\Programs\Python\Python37</code><br>pip.exe <code>C:\Users\winuser\AppData\Local\Programs\Python\Python37\Scripts</code></p><p>新建文件<code>test.py</code>，测试功能</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(&quot;hello world!&quot;)</span><br></pre></td></tr></table></figure><p>注释<br>单行<code>#</code><br>多行<code>&#39;&#39;&#39;</code>,<code>&quot;&quot;&quot;</code></p><p>行缩进表示代码块(就是<code>&#123;&#125;</code>)，同一代码块的缩进【必须】一致</p><p><code>\</code>连接多行语句</p><p><code>&quot;&quot;&quot;</code>多行字符串</p><p>import 与 from…import</p><p>变量类型【自动】，直接定义<code>name=&quot;runoob&quot;</code></p><p>基本数据结构，list, tuple(元组，不可变list),set,dic(就是map)</p><p>元组使用小括号，列表使用方括号</p><p>{ } 或者 set()</p><p>dict &#x3D; {‘Alice’: ‘2341’, ‘Beth’: ‘9102’, ‘Cecil’: ‘3258’}</p><p>基本逻辑处理，if,else,while 最后是分号</p><p>for in 循环遍历元组，列表，字符串，数字</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">   print(&#x27;程序自身在运行&#x27;)</span><br><span class="line">else:</span><br><span class="line">   print(&#x27;被引用为模块&#x27;)</span><br></pre></td></tr></table></figure><p>目录包含一个 <code>__init__.py</code>文件，是一个包</p><p><code>__init__.py</code>内的<code>__all__</code>的列表变量，作为导入包的名称</p><p>class,</p><p><code>def __init__(self,n,a,w):</code>类的构造函数<br><code>class Chinese(Person):</code>类继承，支持多继承<br>单下划线开头，protected<br>双下划线开头，private，私有方法一样加</p><p>可以直接定义函数，<code>def network():</code></p><p>模块安装<code>py -m pip install psutil</code></p><p>windows系统模块，<code>pywin32</code>,<code>wmi</code></p><p>python安装目录里有 <code>2to3.py</code>转换代码2到3，可以复制到需要的目录，注意第一行的<code>#!</code>(shebang line),可能会出现无输出等问题，删除试试<br><code>py 2to3.py test.py</code> 显示转换的行，不保存<br><code>py 2to3.py -w test.py</code> 源文件自动备份为.bak，保存转换结果</p><p><code>py -m pip install beautifulsoup4</code> html解析库</p><p>windows python 2.7.17, 3.7.4共存，下载安装，2默认安装在C:\Python27，3需要自定义安装到C:\Python37<br>安装完改名，python2.exe  python3.exe<br>加入环境变量<code>C:\Python27</code>,<code>C:\Python27\Scripts</code>,3一样<br>测试安装：<code>python2 -V</code>,<code>python3 -V</code></p><p>安装pip模块<br><code>python2 -m pip install module</code></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>linux-common</title>
      <link href="/2019/09/30/linux-common/"/>
      <url>/2019/09/30/linux-common/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl www.google.com</span><br><span class="line">export http_proxy=http://192.168.1.37:1080</span><br><span class="line">curl www.google.com</span><br></pre></td></tr></table></figure><p>sudo权限，与代理,需要安装<code>sudo</code>软件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/etc/sudoers</span><br><span class="line">在下面添加一行对应用户名，替换root</span><br><span class="line">root    ALL=(ALL:ALL) ALL</span><br><span class="line">sudo命令时，保留代理配置，在env_reset下面加一行</span><br><span class="line">Defaults        env_reset</span><br><span class="line">Defaults        env_keep = &quot;http_proxy https_proxy ftp_proxy DISPLAY XAUTHORITY&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">查找日志文件,显示文件大小,按从大到小排序</span><br><span class="line">find ~/ -name *.log.* | xargs du -sh | sort -r -h</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hadoop</title>
      <link href="/2019/09/30/hadoop/"/>
      <url>/2019/09/30/hadoop/</url>
      
        <content type="html"><![CDATA[<p>vm install debian standard,grpghic need ram 1G，ustc mirror</p><p>boot into vm,root login</p><p>apt-get install openssh-server<br>systemctl enable ssh –now<br>ip -4 addr</p><p>normal user login via ssh</p><p>su -<br>nano &#x2F;etc&#x2F;sudoers<br>Defaults        env_keep &#x3D; “http_proxy https_proxy ftp_proxy DISPLAY XAUTHORITY”<br>li      ALL&#x3D;(ALL:ALL) ALL<br>exit</p><p>export http_proxy&#x3D;<a href="http://192.168.1.37:1080/">http://192.168.1.37:1080</a></p><p>sudo apt-get upgrade</p><p>sudo apt install default-jdk<br>java -version</p><p>wget <a href="http://us.mirrors.quenda.co/apache/hadoop/common/hadoop-2.7.7/hadoop-2.7.7.tar.gz">http://us.mirrors.quenda.co/apache/hadoop/common/hadoop-2.7.7/hadoop-2.7.7.tar.gz</a><br>tar xf hadoop-2.7.7.tar.gz</p><p>sudo nano &#x2F;etc&#x2F;profile<br>export JAVA_HOME&#x3D;&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;default-java<br>export CLASSPATH&#x3D;.:$JAVA_HOME&#x2F;lib<br>export PATH&#x3D;$PATH:$JAVA_HOME&#x2F;bin<br>export HADOOP_HOME&#x3D;&#x2F;home&#x2F;li&#x2F;hadoop-2.7.7<br>export PATH&#x3D;$PATH:$HADOOP_HOME&#x2F;bin:$HADOOP_HOME&#x2F;sbin</p><p>nano hadoop-2.7.7&#x2F;etc&#x2F;hadoop&#x2F;core-site.xml<br><?xml version="1.0" encoding="UTF-8"?><br><?xml-stylesheet type="text/xsl" href="configuration.xsl"?><br><configuration>  <br>    <property>  <br>       <name>fs.default.name</name>  <br>       <value>hdfs:&#x2F;&#x2F;cluster-master:9000</value>  <br>   </property><br></configuration></p><p>cp hadoop-2.7.7&#x2F;etc&#x2F;hadoop&#x2F;mapred-site.xml.template hadoop-2.7.7&#x2F;etc&#x2F;hadoop&#x2F;mapred-site.xml<br>nano hadoop-2.7.7&#x2F;etc&#x2F;hadoop&#x2F;mapred-site.xml<br><?xml version="1.0"?><br><?xml-stylesheet type="text/xsl" href="configuration.xsl"?><br><configuration><br>    <property><br>       <name>mapreduce.framework.name</name><br>       <value>yarn</value><br>   </property><br></configuration></p><p>nano hadoop-2.7.7&#x2F;etc&#x2F;hadoop&#x2F;hdfs-site.xml<br><?xml version="1.0"?><br><?xml-stylesheet type="text/xsl" href="configuration.xsl"?><br><configuration><br>    <property>  <br>        <name>dfs.replication</name>  <br>        <value>1</value>  <br>    </property>  <br>    <property>   <br>     <name>dfs.permissions</name>   <br>     <value>false</value>   <br>  </property>  <br>   <property>  <br>       <name>dfs.namenode.name.dir</name>  <br>       <value>file:&#x2F;&#x2F;&#x2F;home&#x2F;li&#x2F;data&#x2F;hdfs&#x2F;nn</value>  <br>   </property>  <br>   <property>  <br>        <name>fs.checkpoint.dir</name>  <br>        <value>file:&#x2F;&#x2F;&#x2F;home&#x2F;li&#x2F;data&#x2F;hdfs&#x2F;snn</value>  <br>    </property>  <br>    <property>  <br>        <name>fs.checkpoint.edits.dir</name>  <br>        <value>file:&#x2F;&#x2F;&#x2F;home&#x2F;li&#x2F;data&#x2F;hdfs&#x2F;snn</value>  <br>    </property>  <br>       <property>  <br>       <name>fs.datanode.data.dir</name>  <br>       <value>file:&#x2F;&#x2F;&#x2F;home&#x2F;li&#x2F;data&#x2F;hdfs&#x2F;dn</value>  <br>   </property><br></configuration></p><p>nano hadoop-2.7.7&#x2F;etc&#x2F;hadoop&#x2F;yarn-site.xml<br><?xml version="1.0"?><br><configuration><br>    <property><br>        <name>yarn.resourcemanager.hostname</name><br>    <value>cluster-master</value><br>    </property><br>    <property>  <br>        <name>yarn.nodemanager.aux-services</name>  <br>        <value>mapreduce_shuffle</value>  <br>   </property>  <br>   <property>  <br>        <name>yarn.nodemanager.auxservices.mapreduce.shuffle.class</name>    <br>        <value>org.apache.hadoop.mapred.ShuffleHandler</value>  <br>   </property><br></configuration></p><p>nano hadoop-2.7.7&#x2F;etc&#x2F;hadoop&#x2F;hadoop-env.sh<br>export JAVA_HOME&#x3D;&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;default-java</p><p>ssh-keygen -t rsa<br>cat .ssh&#x2F;id_rsa.pub &gt;&gt;.ssh&#x2F;authorized_keys<br>chmod 600 .ssh&#x2F;authorized_keys</p><p>ssh localhost</p><p>sudo systemctl poweroff -i 关机快照，链接克隆3个，hadoop1,2,3</p><p>启动三个克隆,normal login, ip -4 addr</p><p>ssh normal user login all</p><p>sudo hostnamectl set-hostname cluster-master</p><p>sudo nano &#x2F;etc&#x2F;hosts<br>192.168.245.135 cluster-master<br>192.168.245.137 cluster-slave1<br>192.168.245.136 cluster-slave2</p><p>2,rm .ssh&#x2F;id_rsa*</p><p>master<br>ssh cluster-master<br>ssh cluster-slave1<br>ssh cluster-slave2<br>ssh 0.0.0.0</p><p>nano hadoop-2.7.7&#x2F;etc&#x2F;hadoop&#x2F;slaves<br>cluster-slave1<br>cluster-slave2</p><p>hdfs namenode -format</p><p>start-dfs.sh<br>start-yarn.sh</p><p>stop-yarn.sh<br>stop-dfs.sh</p><p><a href="http://192.168.245.135:50070/">http://192.168.245.135:50070</a>  HDFS<br><a href="http://192.168.245.135:8088/">http://192.168.245.135:8088</a>   yarn</p><p>:50070的datanodes会显示slave<br>hdfs fsck &#x2F;<br>hdfs dfs -ls &#x2F;<br>hdfs dfs -mkdir -p &#x2F;user&#x2F;zyh<br>hdfs dfsadmin -report  datanode报告</p><p>test<br>yarn jar hadoop-2.7.7&#x2F;share&#x2F;hadoop&#x2F;mapreduce&#x2F;hadoop-mapreduce-examples-2.7.7.jar pi 4 10</p><p>pi 100 5000000, Pi is 3.14159312800000000000</p><p>datanode 日志<br>ls hadoop-2.7.7&#x2F;logs&#x2F;<br>rm hadoop-2.7.7&#x2F;logs&#x2F;*</p><p>:8088&#x2F;cluster 查看job进度，state一直为accepted是有问题的<br>左边的cluster–applications–accepted可以看各个状态的任务<br>比如finished，点击第一列的job id可以进去看日志</p><p>单机开发环境<br>ssh-keygen -t rsa<br>cat ~&#x2F;.ssh&#x2F;id_rsa.pub &gt;&gt; ~&#x2F;.ssh&#x2F;authorized_keys<br>chmod 0600 ~&#x2F;.ssh&#x2F;authorized_keys<br>ssh localhost</p><p>sudo apt-get install ssh rsync</p><p>nano etc&#x2F;hadoop&#x2F;hadoop-env.sh<br>export JAVA_HOME&#x3D;&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;jdk1.8.0_221</p><h1 id="测试运行"><a href="#测试运行" class="headerlink" title="测试运行"></a>测试运行</h1><p>mkdir input<br>cp etc&#x2F;hadoop&#x2F;<em>.xml input<br>bin&#x2F;hadoop jar share&#x2F;hadoop&#x2F;mapreduce&#x2F;hadoop-mapreduce-examples-2.7.6.jar grep input output ‘dfs[a-z.]+’<br>cat output&#x2F;</em></p><p>rm -rf output<br>bin&#x2F;hadoop jar share&#x2F;hadoop&#x2F;mapreduce&#x2F;hadoop-mapreduce-examples-2.7.7.jar wordcount input output</p><h1 id="jar"><a href="#jar" class="headerlink" title="jar"></a>jar</h1><p>idea maven proj<br><properties><br>        &lt;hadoop.version&gt;2.7.7&lt;&#x2F;hadoop.version&gt;<br>    </properties></p><pre><code>&lt;dependencies&gt;    &lt;dependency&gt;        &lt;groupId&gt;junit&lt;/groupId&gt;        &lt;artifactId&gt;junit&lt;/artifactId&gt;        &lt;version&gt;3.8.1&lt;/version&gt;        &lt;scope&gt;test&lt;/scope&gt;    &lt;/dependency&gt;    &lt;dependency&gt;        &lt;groupId&gt;org.apache.hadoop&lt;/groupId&gt;        &lt;artifactId&gt;hadoop-client&lt;/artifactId&gt;        &lt;version&gt;$&#123;hadoop.version&#125;&lt;/version&gt;    &lt;/dependency&gt;    &lt;dependency&gt;        &lt;groupId&gt;org.apache.hadoop&lt;/groupId&gt;        &lt;artifactId&gt;hadoop-common&lt;/artifactId&gt;        &lt;version&gt;$&#123;hadoop.version&#125;&lt;/version&gt;    &lt;/dependency&gt;&lt;/dependencies&gt;</code></pre><p>WordCount.java&lt;&lt;&lt;<br>package ddddd;</p><p>import java.io.IOException;<br>import java.util.StringTokenizer;</p><p>import org.apache.hadoop.conf.Configuration;<br>import org.apache.hadoop.fs.Path;<br>import org.apache.hadoop.io.IntWritable;<br>import org.apache.hadoop.io.Text;<br>import org.apache.hadoop.mapreduce.Job;<br>import org.apache.hadoop.mapreduce.Mapper;<br>import org.apache.hadoop.mapreduce.Reducer;<br>import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;<br>import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;<br>import org.apache.hadoop.util.GenericOptionsParser;</p><p>public class WordCount {</p><p>  public static class TokenizerMapper<br>       extends Mapper&lt;Object, Text, Text, IntWritable&gt;{</p><pre><code>private final static IntWritable one = new IntWritable(1);private Text word = new Text();  public void map(Object key, Text value, Context context                ) throws IOException, InterruptedException &#123;  StringTokenizer itr = new StringTokenizer(value.toString());  while (itr.hasMoreTokens()) &#123;    word.set(itr.nextToken());    context.write(word, one);  &#125;&#125;</code></pre><p>  }</p><p>  public static class IntSumReducer<br>       extends Reducer&lt;Text,IntWritable,Text,IntWritable&gt; {<br>    private IntWritable result &#x3D; new IntWritable();</p><pre><code>public void reduce(Text key, Iterable&lt;IntWritable&gt; values,                    Context context                   ) throws IOException, InterruptedException &#123;  int sum = 0;  for (IntWritable val : values) &#123;    sum += val.get();  &#125;  result.set(sum);  context.write(key, result);&#125;</code></pre><p>  }</p><p>  public static void main(String[] args) throws Exception {<br>    Configuration conf &#x3D; new Configuration();<br>    String[] otherArgs &#x3D; new GenericOptionsParser(conf, args).getRemainingArgs();<br>    if (otherArgs.length &lt; 2) {<br>      System.err.println(“Usage: wordcount <in> [<in>…] <out>“);<br>      System.exit(2);<br>    }<br>    Job job &#x3D; Job.getInstance(conf, “word count”);<br>    job.setJarByClass(WordCount.class);<br>    job.setMapperClass(TokenizerMapper.class);<br>    job.setCombinerClass(IntSumReducer.class);<br>    job.setReducerClass(IntSumReducer.class);<br>    job.setOutputKeyClass(Text.class);<br>    job.setOutputValueClass(IntWritable.class);<br>    for (int i &#x3D; 0; i &lt; otherArgs.length - 1; ++i) {<br>      FileInputFormat.addInputPath(job, new Path(otherArgs[i]));<br>    }<br>    FileOutputFormat.setOutputPath(job,<br>      new Path(otherArgs[otherArgs.length - 1]));<br>    System.exit(job.waitForCompletion(true) ? 0 : 1);<br>  }<br>}<br>&lt;&lt;&lt;<br>使用右侧的maven，clean，package<br>C:\Users\mjoys\proj\hadoopmy\target</p><p>使用类全名，不然main ClassNotFoundException<br>bin&#x2F;hadoop jar jar&#x2F;hadoopmy-1.0.jar ddddd.WordCount input output</p><p>自定义排序<br>自定义包装类 implements WritableComparable，里面有比较方法compareTo<br>mapper读取行，写入以自定义对象为key的k-v,context.write(自定义对象,NullWritable.get());，hadoop会自动调用自定义保证类排序</p><p>分区<br>多个reduce，每个reduce生成一个结果文件<br>自定义分区类 extends Partitioner里面getPartition()第三个参数为分区数量,返回结果只能为0,1,2,3等，表示分区号，因为源码里返回值计算 return (key.hashCode() &amp; Integer.MAX_VALUE) % numReduceTasks;<br>job.setNumReduceTasks(3) reduce数量即为分区数量</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>grep</title>
      <link href="/2019/09/29/grep/"/>
      <url>/2019/09/29/grep/</url>
      
        <content type="html"><![CDATA[<p>grep 默认【区分】大小写，<code>-i</code> 不区分</p><p><code>grep -n zoo stack.yml</code> 显示行号的查找</p><p><code>grep  &quot;Z\|z&quot; stack.yml</code> 同 <code>grep  -E &quot;Z|z&quot; stack.yml</code> 多个【或】字符查找</p><p><code>grep &quot;zoo1&quot;  stack.yml |grep &quot;zoo2&quot;</code> 同 <code>grep -E &quot;zoo1.*zoo2&quot;  stack.yml</code>(这个有字符前后顺序，前面的那个没有) 多个【和】字符查找</p><p><code>-A 1</code>,<code>-B 1</code>,<code>-C 1</code> 多显示匹配行的下面一行，上面一行，上下一行，方便看日志</p><p>springboot的错误日志</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grep -n &quot; ERROR &quot; nohup.out # line num</span><br><span class="line">head -n 21229 nohup.out |tail -n 11 # 10 lines below error line, 21229是错误行号 + 错误行往下10行，11是往上多一行显示错误行号，那一行</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux命令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> grep </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sed</title>
      <link href="/2019/09/29/sed/"/>
      <url>/2019/09/29/sed/</url>
      
        <content type="html"><![CDATA[<p><code>cat -n file</code> 文件行号</p><p><code>sed -e &#39;5d&#39; file</code>预览删除第5行的文件，控制台输出</p><p><code>sed -i &#39;5d&#39; file</code>删除文件第5行</p><p><code>sed -i &#39;s/^M$//&#39; file</code> dos2unix转换换行符<br><code>tr -d &#39;\r&#39; &lt; input &gt; output</code> 转换换行符</p>]]></content>
      
      
      <categories>
          
          <category> linux命令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sed </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker-logstash</title>
      <link href="/2019/09/29/docker-logstash/"/>
      <url>/2019/09/29/docker-logstash/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">// pipeline/logstash.conf</span><br><span class="line">input &#123;</span><br><span class="line">        tcp &#123;</span><br><span class="line">                port =&gt; 5000</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">## Add your filters / logstash plugins configuration here</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">        elasticsearch &#123;</span><br><span class="line">                hosts =&gt; &quot;192.168.245.134:9200&quot;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//查看默认配置</span><br><span class="line">docker run --name logstash7.0.0 -p 5044:5044 -p 9600:9600 -d docker.elastic.co/logstash/logstash:7.0.0</span><br><span class="line">docker cp logstash7.0.0:/usr/share/logstash/config .</span><br><span class="line">docker rm -f logstash7.0.0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker run --name logstash7.0.0 -v /home/qgtb/pipeline/:/usr/share/logstash/pipeline/ -p 5000:5000 -p 9600:9600 -d docker.elastic.co/logstash/logstash:7.0.0</span><br></pre></td></tr></table></figure><p>springboot</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//pom.xml</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;net.logstash.logback&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;logstash-logback-encoder&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;5.1&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//application.yml</span><br><span class="line">logging:</span><br><span class="line">  config: classpath:logback-spring.xml</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">//logback-spring.xml</span><br><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;configuration&gt;</span><br><span class="line">    &lt;include resource=&quot;org/springframework/boot/logging/logback/base.xml&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;appender name=&quot;LOGSTASH&quot; class=&quot;net.logstash.logback.appender.LogstashTcpSocketAppender&quot;&gt;</span><br><span class="line">        &lt;destination&gt;192.168.245.134:5000&lt;/destination&gt; //logstash ip和暴露的端口</span><br><span class="line">        &lt;encoder charset=&quot;UTF-8&quot; class=&quot;net.logstash.logback.encoder.LogstashEncoder&quot; /&gt;</span><br><span class="line">    &lt;/appender&gt;</span><br><span class="line"></span><br><span class="line">    &lt;root level=&quot;warn&quot;&gt;</span><br><span class="line">        &lt;appender-ref ref=&quot;LOGSTASH&quot; /&gt;</span><br><span class="line">        &lt;appender-ref ref=&quot;CONSOLE&quot; /&gt;</span><br><span class="line">    &lt;/root&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import org.slf4j.Logger;</span><br><span class="line">import org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line">private Logger log = LoggerFactory.getLogger(App.class.getName());</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>docker-es-kibana</title>
      <link href="/2019/09/27/docker-es-kibana/"/>
      <url>/2019/09/27/docker-es-kibana/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">docker run --name elasticsearch5.6.11 -p 9200:9200 -p 9300:9300 -e &quot;discovery.type=single-node&quot;  -d elasticsearch:5.6.11</span><br><span class="line">curl 127.0.0.1:9200  # 需要等一会</span><br><span class="line">http://192.168.245.134:9200/</span><br><span class="line">docker run --name kibana5.6.11 -e ELASTICSEARCH_URL=http://192.168.245.134:9200 -p 5601:5601 -d kibana:5.6.11</span><br><span class="line">http://192.168.245.134:5601</span><br><span class="line"></span><br><span class="line"># es监控，先进入es容器，配置跨域</span><br><span class="line">docker exec -it 42d639a08934 /bin/bash</span><br><span class="line">echo &quot;http.cors.enabled: true&quot; &gt;&gt;/usr/share/elasticsearch/config/elasticsearch.yml</span><br><span class="line">echo &quot;http.cors.allow-origin: \&quot;*\&quot;&quot; &gt;&gt;/usr/share/elasticsearch/config/elasticsearch.yml</span><br><span class="line">docker restart 42d639a08934</span><br><span class="line"></span><br><span class="line">docker run --name es-head5 -p 9100:9100 -d docker.io/mobz/elasticsearch-head:5</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>docker的使用</title>
      <link href="/2019/09/27/docker/"/>
      <url>/2019/09/27/docker/</url>
      
        <content type="html"><![CDATA[<p>安装后的测试 <code>sudo docker run hello-world</code></p><p>加入docker组，避免每次sudo，需要重新登录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo usermod -aG docker your-user  # user docker without sudo, need relogin</span><br></pre></td></tr></table></figure><p><code>docker run</code> 是<code>create</code>与<code>start</code>的别名，每次回新建一个container</p><p><code>docker images</code> 镜像列表</p><p><code>docker ps</code> 运行中的container</p><p><code>docker ps -a</code> 所有container，container是基于image创建的</p><p><code>docker logs d1c445661242</code> 运行的container的输出，后面是<code>docker ps -a</code>后的<code>CONTAINER ID</code>或者<code>NAMES</code></p><p><code>docker start</code>与<code>docker stop</code></p><p><code>docker exec -it myzk zkCli.sh</code> 进入bash</p><p><code>docker rm f15b368502c8</code></p><p><code>docker rm -f logstash7.0.0</code></p><p><code>docker network ls</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker stop $(docker ps -a -q)</span><br><span class="line">docker rm $(docker ps -a -q)</span><br></pre></td></tr></table></figure><p><code>docker inspect bcfa49b0535f</code></p><p><code>docker search elasticsearch</code> 搜索镜像</p><p><code>sudo apt-get install curl</code></p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>docker-zookeeper</title>
      <link href="/2019/09/27/docker-zookeeper/"/>
      <url>/2019/09/27/docker-zookeeper/</url>
      
        <content type="html"><![CDATA[<p><a href="https://hub.docker.com/_/zookeeper">docker–zookeeper</a></p><p><code>docker pull zookeeper</code></p><p><code>docker run --name myzk -d zookeeper:latest</code></p><p><code>docker logs -f myzk</code></p><p><code>docker inspect myzk | grep IPAddress</code> 默认启动的没有绑定本机端口，只能在本地访问, 可以iptables转发</p><p><code>docker exec -it myzk zkCli.sh</code> 进入container的bash，myzk是名字，后面是进入后执行的命令</p><p><code>docker stop myzk</code></p><p>zookeeper命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ls /</span><br><span class="line">ls /zookeeper</span><br><span class="line">stat /zookeeper</span><br><span class="line">quit</span><br></pre></td></tr></table></figure><p>docker-compose的zk集群，3台</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">//stack.yml</span><br><span class="line">version: &#x27;3.1&#x27;</span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  zoo1:</span><br><span class="line">    image: zookeeper</span><br><span class="line">    restart: always</span><br><span class="line">    hostname: zoo1</span><br><span class="line">    ports:</span><br><span class="line">      - 2181:2181</span><br><span class="line">    environment:</span><br><span class="line">      ZOO_MY_ID: 1</span><br><span class="line">      ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181</span><br><span class="line"></span><br><span class="line">  zoo2:</span><br><span class="line">    image: zookeeper</span><br><span class="line">    restart: always</span><br><span class="line">    hostname: zoo2</span><br><span class="line">    ports:</span><br><span class="line">      - 2182:2181</span><br><span class="line">    environment:</span><br><span class="line">      ZOO_MY_ID: 2</span><br><span class="line">      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=0.0.0.0:2888:3888;2181 server.3=zoo3:2888:3888;2181</span><br><span class="line"></span><br><span class="line">  zoo3:</span><br><span class="line">    image: zookeeper</span><br><span class="line">    restart: always</span><br><span class="line">    hostname: zoo3</span><br><span class="line">    ports:</span><br><span class="line">      - 2183:2181</span><br><span class="line">    environment:</span><br><span class="line">      ZOO_MY_ID: 3</span><br><span class="line">      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=0.0.0.0:2888:3888;2181</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">COMPOSE_PROJECT_NAME=zk_test docker-compose -f stack.yml up -d</span><br><span class="line">docker ps |grep zoo</span><br><span class="line">COMPOSE_PROJECT_NAME=zk_test docker-compose -f stack.yml ps</span><br><span class="line">COMPOSE_PROJECT_NAME=zk_test docker-compose -f stack.yml down</span><br><span class="line"></span><br><span class="line">docker exec -it zk_test_zoo1_1 zkServer.sh status  # 状态</span><br><span class="line"></span><br><span class="line">echo stat | nc 127.0.0.1 2181 # 测试端口绑定，会显示stat信息或者stat is not executed because it is not in the whitelist</span><br><span class="line"></span><br><span class="line">docker exec -it zk_test_zoo1_1 zkCli.sh # 进入zk命令</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>debian</title>
      <link href="/2019/09/27/debian/"/>
      <url>/2019/09/27/debian/</url>
      
        <content type="html"><![CDATA[<p><a href="https://cdimage.debian.org/debian-cd/current-live/amd64/bt-hybrid/">下载镜像</a></p><p><a href="https://cdimage.debian.org/debian-cd/current-live/amd64/bt-hybrid/debian-live-10.1.0-amd64-gnome.iso.torrent">debian-live-10.1.0-amd64-gnome.iso.torrent</a></p><p><a href="https://cdimage.debian.org/debian-cd/current-live/amd64/bt-hybrid/debian-live-10.1.0-amd64-standard.iso.torrent">debian-live-10.1.0-amd64-standard.iso.torrent</a>没有桌面，826M</p><p>graphical install</p><p><code>systemctl get-default</code></p><p><code>systemctl set-default multi-user</code> 开机启动到终端，不直接进入gui</p><p><code>systemctl enable graphical.target --force</code> 启动进入gui</p><p><code>systemctl reboot</code> reboot</p><p><code>su -</code> 输入root密码，切换为root, 不加”-“,切换后usermod找不到，路径不对</p><p><code>apt install openssh-server</code> sshd</p><p><code>systemctl enable ssh --now</code> 启动并设置为开机启动ssh</p><p><code>ip -4 addr</code></p><p><code>nano /etc/sudoers</code> add <code>qgtb    ALL=(ALL:ALL) ALL</code> sudo权限</p><p><code>sudo apt list --upgradable</code> 列出可升级的包</p><p>安装docker</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove docker docker-engine docker.io containerd runc</span><br><span class="line">sudo apt-get install apt-transport-https ca-certificates curl gnupg2 software-properties-common</span><br><span class="line">curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -</span><br><span class="line">sudo apt-key fingerprint 0EBFCD88</span><br><span class="line"></span><br><span class="line">sudo add-apt-repository \</span><br><span class="line">   &quot;deb [arch=amd64] https://download.docker.com/linux/debian \</span><br><span class="line">   $(lsb_release -cs) \</span><br><span class="line">   stable&quot;</span><br><span class="line"></span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install docker-ce docker-ce-cli containerd.io</span><br><span class="line">sudo docker run hello-world</span><br><span class="line"></span><br><span class="line">sudo usermod -aG docker your-user  # user docker without sudo, need relogin</span><br><span class="line"></span><br><span class="line">sudo curl -L &quot;https://github.com/docker/compose/releases/download/1.24.1/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose</span><br><span class="line">sudo chmod +x /usr/local/bin/docker-compose</span><br><span class="line">docker-compose --version</span><br><span class="line"># sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose</span><br></pre></td></tr></table></figure><p><code>sudo apt install netcat</code>  nc</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">apt Could not get lock /var/lib/dpkg/lock-frontend - open (11: Resource temporarily unavailable)</span><br><span class="line"></span><br><span class="line">ps aux | grep -i apt</span><br><span class="line">systemctl stop apt-daily.service</span><br><span class="line">systemctl kill --kill-who=all apt-daily.service</span><br><span class="line"></span><br><span class="line">sudo killall apt apt-get</span><br><span class="line">sudo rm /var/lib/apt/lists/lock</span><br><span class="line">sudo rm /var/cache/apt/archives/lock</span><br><span class="line">sudo rm /var/lib/dpkg/lock*</span><br><span class="line">sudo dpkg --configure -a</span><br><span class="line">sudo apt update</span><br></pre></td></tr></table></figure><p><code>apt-cache show gnome-core | grep ^Depends</code> 依赖的包<br><code>apt-cache --installed rdepends firefox-esr</code> 依赖于这个包的包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install software-properties-common # for add-apt-repository</span><br><span class="line">sudo add-apt-repository &quot;deb http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main&quot;</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 40976EAF437D05B5</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install open-vm-tools</span><br><span class="line">sudo systemctl reboot</span><br><span class="line">/usr/bin/vmware-toolbox-cmd -v</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> debian </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>线性代数Linear-algebra</title>
      <link href="/2019/09/25/math-Linear-algebra/"/>
      <url>/2019/09/25/math-Linear-algebra/</url>
      
        <content type="html"><![CDATA[<ol><li><p>行列式与矩阵</p></li><li><p>n维向量与线性方程组</p></li><li><p>特征值，特征向量与二次型</p></li></ol><p><img src="/zongjie.png" alt="线代总结"></p><p>行列式就是一个值</p><p>行列式5个性质</p><ol><li>转置值不变</li><li>某一行公因式可提前–&gt; 数乘行列式 &#x3D; 数乘到某一行上</li><li>某一行为两数之和，可写为两个行列式之和</li><li>互换两行值变号–&gt; 两行相同或成比例，值为0</li><li>某行的k倍加到另一行，值不变</li></ol><p>行列式 &#x3D; 某一行与其对应代数余子式之和，计算，xA11+yA12+zA13 等于把（x,y,z）替换第一行后的行列式的值</p><p>可逆矩阵,乘积为单位阵，逆矩阵是唯一的(定义反证)，A·A^-1&#x3D;E</p><p><img src="/nizhen-xingzhi.png" alt="逆矩阵性质"></p><p>证明可逆：（1,3,4都是证明行向量线性无关）<br>1、若是矩阵的秩小于n，那么这个矩阵不可逆，反之就是可逆矩阵。<br>2、若是矩阵行列式的值为0，那么这个矩阵不可逆，反之则为可逆。<br>3、对于齐次线性方程AX&#x3D;0，若方程只有零解，那么这个矩阵可逆。<br>4、对于非齐次线性方程AX&#x3D;b，若方程有特解，那么这个矩阵可逆。</p><p>求逆矩阵：</p><ol><li>A^-1&#x3D;A^*&#x2F;|A|, 伴随阵除以行列式</li><li>初等变换，(A E),当A变换为E时，E就是逆矩阵</li><li>用定义推到分块矩阵求逆公式，设逆矩阵为[A11 A12, A21 A22],然后[分块]·[A11 A12, A21 A22]&#x3D;E，然后根据矩阵乘法乘开，解出来A11等于多少，就是公式 <img src="/fenkuai-nizhen.png" alt="分块矩阵逆阵"></li></ol><p>A^*伴随阵，是求得原矩阵每个代数余子式后，【转置】得到的</p><p>伴随阵性质：</p><ol><li>AA*&#x3D;|A|E<br><img src="/bansui-xingzhi.png" alt="伴随阵性质"></li></ol><p>正交矩阵：A·A^T &#x3D; E</p><p>相似矩阵：p^-1Ap&#x3D;B，A与B相似，p为可逆矩阵</p><p>矩阵对角化，就是p^-1Ap&#x3D;Λ 就是矩阵A与对角阵相似</p><p>合同矩阵，A,B是两个n阶方阵，C^TAC&#x3D;B，方阵A合同于矩阵B， A≃B</p>]]></content>
      
      
      <categories>
          
          <category> 高数 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络通识</title>
      <link href="/2019/09/12/cs-net-common/"/>
      <url>/2019/09/12/cs-net-common/</url>
      
        <content type="html"><![CDATA[<p><img src="/3-protocol.png" alt="三种协议"><br>osi七层协议，是制定的标准<br>tcp&#x2F;ip四层，是实际使用的标准<br>五层协议，是书为了教知识，自己对应的，不是标准，也不存在</p><p><img src="/tcp-protocol.jpg" alt="tcp/ip"><br>tcp&#x2F;ip, 常见协议工作层</p><p>【数据链路层】, 网线直连的两个网卡接口传输数据,mac地址</p><p>ARP协议（Address Resolve Protocol，地址解析协议）和RARP协议（ReverseAddress Resolve Protocol，逆地址解析协议）</p><p>【网络层】, 与目标之间，传输经过多个【路由】（想想这个名字“路由”，就是怎么找路，然后邮递数据），解决如何选择这些路由路线</p><p>IP协议（Internet Protocol，因特网协议）和ICMP协议（Internet Control Message Protocol，因特网控制报文协议）</p><pre><code>ip, 根据数据包的目的IP地址来决定如何投递它,为它寻找一个合适的下一跳（next hop）路由器, 直到到达目的icmp,检测网络连接</code></pre><p>【传输层】, 两台主机上的应用程序提供端到端（end to end）的通信，忽略中间的传输过程。通信数据的起始和结束</p><p>TCP协议（Transmission Control Protocol，传输控制协议）和UDP协议（User Datagram Protocol，用户数据报协议）</p><p>【应用层】，程序收到数据后的处理</p><p>各层数据单元，数据是一层层添加包头等等，上下依次处理<br>应用层——消息<br>传输层——数据段(segment)<br>网络层——分组、数据包（packet）<br>链路层——帧（frame），mtu(帧最大传输单元)<br>物理层——P-PDU（bit）</p><p><img src="/protocol-up-down.gif" alt="网络数据封装"></p><p>常见协议工作层</p><p><img src="/protocol-common.png" alt="tcp/ip"></p><p>tcp不能进行广播和多播，因为tcp是面向连接的</p><p>计算机程序的端口是为了区分计算机上的程序，或者对面连接的计算机上的程序</p><p>物理层，两个连接的计算机怎么物理通信<br>传输媒体：<br>    导向传输媒体，双绞线，同轴电缆，光纤<br>    非导向传输媒体，无线电波<br>信道复用：频分复用，时分复用，统计时分复用，波分复用（光的频分复用），码分复用(同一频率，用户不同码型)</p><p>数据链路层，两个连接的计算机数据通信<br>链路，两个连接的物理线路<br>数据链路，链路与通信协议，<br>帧<br>  封装成帧，mtu，添加帧首尾，soh（start of head）,eot（end of transmission）<br>  透明传输，字节填充，帧中间出现eot前加esc转义，esc前也要加esc，<br>  错检测，crc<br>ppp,点对点协议，首尾为0x7e，<br>以太网，总线型，广播，csma&#x2F;cd<br>网桥，链路层的mac子层，隔离开碰撞域</p><p>网络层，数据包，从源地址到目的地址，ip数据报<br>两种服务，虚电路服务(vc,需要建立连接)，数据报服务(ip数据报)<br>ip数据报中，网络层的源地址与目的地址在传输中不变，数据链路层的mac帧的源地址(mac物理地址)与目的地址会根据发往的节点改变<br>arp，通过ip找到对应的物理地址，局域网内，数据根据mac地址传输，arp会通过广播找到需要的ip的硬件地址<br>icmp，网际控制报文协议，基于ip数据报<br>    差错报告报文，（终点不可达，源点抑制（包因拥塞丢弃），超时，参数问题）<br>    询问报文，（回送，时间戳）<br>ping使用icmp的回送请求与回送回答报文<br>traceroute，每次ttl加1，收到icmp超时报文，数据报是无法交付的udp，最终达到会收到icmp终点不可达报文<br>路由选择协议<br>    icp内部网关协议，rip，ospf<br>    egp外部网关协议，bgp-4</p><p>运输层，tcp，udp</p><p>应用层</p><pre><code>smtp，只要是【发】就是smtp，只有用户去邮件服务器【读】才使用pop3，发件人的用户代理向发送方邮件服务器发送邮件，以及发送方邮件服务器向接收方邮件服务器【发】送邮件，都是使用SMTP协议。而POP或IMAP则是用户代理从接收方邮件服务器上读取邮件所使用的协议。</code></pre>]]></content>
      
      
      <categories>
          
          <category> 计算机专业 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>导数微分积分三者关系</title>
      <link href="/2019/09/11/math-dao-wei-ji/"/>
      <url>/2019/09/11/math-dao-wei-ji/</url>
      
        <content type="html"><![CDATA[<p>导数是函数切线的斜率</p><p>微分是函数的切线的函数</p><p>然后积分就是原来的函数</p><p>求导是方法是原理，可以有很多种实现方法，也即每个地方可以有不同的斜率，是一堆斜率集</p><p>微分是具体加工，就是对某一处进行实例化，是具体某一个斜率结果</p><p>积分是家具部件相当于斜率的切点，这一堆切点就组成回原来的函数即是家具</p>]]></content>
      
      
      <categories>
          
          <category> 高数 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>泰勒公式Taylor-formula</title>
      <link href="/2019/09/11/math-Taylor-formula/"/>
      <url>/2019/09/11/math-Taylor-formula/</url>
      
        <content type="html"><![CDATA[<p>函数展开为多项式的形式，用多项式逼近函数，从而达到方便研究函数的目的</p><p><img src="/taylor-formula.png" alt="泰勒公式"></p><p><img src="/Taylor-formula1.jpg" alt="泰勒公式"></p><p><img src="/sinx.png" alt="泰勒公式"></p><p><img src="/cosx.png" alt="泰勒公式"></p><p><img src="/tanx.gif" alt="泰勒公式"></p><p><img src="/arcsinx.png" alt="泰勒公式"></p><p><img src="/1+x.png" alt="泰勒公式"></p><p><img src="/1-x.png" alt="泰勒公式"></p><p><img src="/ex.png" alt="泰勒公式"></p><p><img src="/ln1+x.png" alt="泰勒公式"></p>]]></content>
      
      
      <categories>
          
          <category> 高数 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>等价无穷小Equivalent-Infinitesimal</title>
      <link href="/2019/09/11/math-Equivalent-Infinitesimal/"/>
      <url>/2019/09/11/math-Equivalent-Infinitesimal/</url>
      
        <content type="html"><![CDATA[<p><img src="http://latex.codecogs.com/png.latex?%5Clim%5Cfrac%7Ba%7D%7Bb%7D=1" alt="等价无穷小"></p><p>趋近极限时，比值为1，在【求极限】时可以上下消去</p><p>【注意】求极限时，x趋近的值，是趋于0还是无穷，比如只有x→0时，x 与 sinx 才是等价无穷小，才能消去</p><p>有的等价无穷小是有泰勒公式得来</p><p><img src="http://latex.codecogs.com/png.latex?x%5Crightarrow%200,%20x%5Csim%20%5Csin%20x%5Csim%20%5Carcsin%20x%5Csim%20%5Ctan%20x%5Csim%20%5Carctan%20x%20%5Csim%20%5Cln(1+x)%5Csim%20e%5Ex-1" alt="等价无穷小"></p><p><img src="http://latex.codecogs.com/png.latex?a%5Ex-1%5Csim%20x%5Ccdot%20%5Cln%20a" alt="等价无穷小"></p><p><img src="http://latex.codecogs.com/png.latex?(1+x)%5Ea-1%5Csim%20ax" alt="等价无穷小"></p><p><img src="http://latex.codecogs.com/png.latex?1-%5Ccos%20x%5Csim%20%5Cfrac%7B1%7D%7B2%7Dx%5E2" alt="等价无穷小"></p><p><img src="http://latex.codecogs.com/png.latex?x-%5Csin%20x%5Csim%20%5Cfrac%7B1%7D%7B6%7Dx%5E3" alt="等价无穷小"></p><p><img src="http://latex.codecogs.com/png.latex?x%5Crightarrow%200,e%5Ex+e%5E%7B-x%7D-2%5Csim%20x%5E2" alt="等价无穷小"></p>]]></content>
      
      
      <categories>
          
          <category> 高数 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>latex常用的数学公式生成</title>
      <link href="/2019/09/10/latex-math/"/>
      <url>/2019/09/10/latex-math/</url>
      
        <content type="html"><![CDATA[<p>下面是数学符合列表，很多，看看常用的就行<br><a href="https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols">List of LaTeX mathematical symbols</a></p><p><a href="https://en.wikibooks.org/wiki/LaTeX/Mathematics">LaTeX&#x2F;Mathematics–wiki</a></p><p><a href="https://zh.wikipedia.org/wiki/Help:%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F">数学公式–wiki</a></p><p>在线网页查看tex公式生成</p><p><a href="http://hostmath.com/">Online LaTeX formula editor–hostmath</a></p><p><a href="https://www.codecogs.com/latex/eqneditor.php?lang=en-us">Online LaTeX formula editor–codecogs</a></p><p><code>http://latex.codecogs.com/png.latex?</code> 后面加下面的tex代码【直接】生成的公式图片</p><p>有的符号需要使用urlencode转义</p><p>空格 : %20</p><p><code>\frac&#123;1&#125;&#123;2&#125;</code> : 是分数<code>fraction</code>的缩写 <img src="http://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7B2%7D" alt="数学tex"></p><p><code>\sqrt[n]&#123;3&#125;</code> <img src="http://latex.codecogs.com/png.latex?%5Csqrt%5Bn%5D%7B3%7D" alt="数学tex"></p><p><code>\lim_&#123;t\to n&#125;T</code> <img src="http://latex.codecogs.com/png.latex?%5Clim_%7Bt%5Cto%20n%7DT" alt="数学tex"></p><p><code>\begin&#123;bmatrix&#125;1&amp;2&amp;3&amp;\\4&amp;5&amp;6&amp;\\9&amp;8&amp;7&amp;\end&#123;bmatrix&#125;</code> <img src="http://latex.codecogs.com/png.latex?%5Cbegin%7Bbmatrix%7D1&2&3&%5C%5C4&5&6&%5C%5C9&8&7&%5Cend%7Bbmatrix%7D" alt="数学tex"></p><p><code>bmatrix</code> 就是 <code>bracket</code> 方括号<br><code>pmatrix</code> 就是 <code>parenthesis</code> 圆括号</p><p><code>\partial y</code> 偏微分</p><p><code>\prod_&#123;t\to n&#125;</code> 连乘积</p><p><code>\sum_&#123;x=0&#125;^&#123;n&#125;</code>  连加和</p><p><code>\sim</code> 等价号</p><p><code>\approx</code> 约等于</p><p><code>\equiv</code>  三线恒等于</p><p><code>\log_&#123;abc&#125;&#123;efg&#125;</code> 任意对数</p><p><code>\ln x</code> e对数</p><p><code>\lg x</code> 10对数</p><p><code>\quad</code> 空格</p><pre><code>``\iint_&#123;-N&#125;^&#123;N&#125;\int_&#123;-N&#125;^&#123;N&#125;\frac&#123;x&#125;&#123;R^3&#125;dx=\frac&#123;2&#125;&#123;(2n-1)(4ac-b^2)&#125;[\frac&#123;2ax+b&#125;&#123;r^&#123;2n-1&#125;&#125;+4a(n-1)\int\frac&#123;\left| \frac&#123;a&#125;&#123;b&#125; \right|&#125;&#123;6\sqrt[3]&#123;x&#125;R&#125;]`` 只是演示，不是公式 ![数学tex](http://latex.codecogs.com/png.latex?\iint_&#123;-N&#125;^&#123;N&#125;\int_&#123;-N&#125;^&#123;N&#125;\frac&#123;x&#125;&#123;R^3&#125;dx=\frac&#123;2&#125;&#123;(2n-1)(4ac-b^2)&#125;[\frac&#123;2ax+b&#125;&#123;r^&#123;2n-1&#125;&#125;+4a(n-1)\int\frac&#123;\left|%20\frac&#123;a&#125;&#123;b&#125;%20\right|&#125;&#123;6\sqrt[3]&#123;x&#125;R&#125;])``\iint`` 二重积分, ``_&#123;-N&#125;^&#123;N&#125;``积分上下限, ``\frac&#123;x&#125;&#123;R^3&#125;``分数，分子分母, ``^2``指数上标, ``^&#123;2n-1&#125;``指数含有多个, ``\left| ``,`` \right|``左右绝对值符号基本都可以从上面这个复杂的公式得到相应公式写法，其他用到了再查看文档</code></pre>]]></content>
      
      
      <categories>
          
          <category> latex </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学公式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nano</title>
      <link href="/2019/09/04/nano/"/>
      <url>/2019/09/04/nano/</url>
      
        <content type="html"><![CDATA[<p>nano 编辑器</p><p>打开后，下面会提示按键<br>^ 是ctrl<br>m 是esc</p><p>ctrl+x 没有修改会直接退出，有修改，需要按“y”确认保存修改，回车确认文件路径，保存后退出<br>Ctrl+w 查找 m-c 大小写<br>ctrl+c 右下角显示当前行号，等等信息，或者nano -c 文件，会一直显示</p><p>ctrl +w ctrl +v 文件尾</p><p>m+\ 文件开始<br>m+&#x2F; 文件尾</p><p>光标行首，ctrl+k 删除行</p><p>m+\ m+a m+&#x2F; ctrl+k 删除全部</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>gentoo的emerge选项</title>
      <link href="/2019/09/04/gentoo-emerge/"/>
      <url>/2019/09/04/gentoo-emerge/</url>
      
        <content type="html"><![CDATA[<p><a href="https://dev.gentoo.org/~zmedico/portage/doc/man/emerge.1.html">man-emerge</a></p><p><code>emerge --info</code> 尤其是 USE 变量值，就是系统的一些功能</p><p><code>-a</code> 等同 <code>--ask</code> 有问题询问用户<br><code>-v</code> 等同 <code>--verbose</code> 详细输出<br><code>-u</code> 等同 <code>--update</code> 更新包为最新版本<br><code>-U</code> 等同 <code>--changed-use</code> 包括已安装包设置的USE<br><code>-D</code> 等同 <code>--deep</code> 整个依赖树<br><code>-N</code> 等同 <code>--newuse</code> USE 变量修改后<br><code>-A</code> 等同 <code>--alert</code> 命令完成后响声提示， Add a terminal bell character (‘\a’) to all interactive prompts<br><code>-p</code> 等同 <code>--pretend</code> 显示将要安装的包，并不安装，对不熟悉的包使用，what <em>would</em> have been installed<br><code>-t</code> 等同 <code>--tree</code> 显示依赖树，需要–update and –deep<br><code>-c</code> 等同 <code>--depclean</code> 后面跟包名就是卸载，没有就是删除系统内没有依赖，不用的包，如果有依赖没有解决，不做任何操作</p><p><code>emerge -auAD @world</code><br><code>emerge -auAD @world</code></p><p><code>emerge --sync</code> 更新软件包数据，就是<code>rsync</code> 目录 <code>/var/cache/distfiles</code></p><p><code>--with-bdeps</code> 安装包时，默认启用，就是emerge的calculations时，把编译时依赖的包也安装上</p><p><code>--autounmask-write</code> 自动<code>unmask packages</code>, 自动更新USE，package.use</p><p><code>--keep-going</code> 出错后，尽可能执行其他，比如下载，编译其他的包</p><p><code>emerge -pe @world</code> 显示所有包，-p是显示，-e是empty tree，就是整个依赖树</p>]]></content>
      
      
      <categories>
          
          <category> gentoo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> emerge </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux手动配置网络</title>
      <link href="/2019/09/04/linux-manual-dhcp/"/>
      <url>/2019/09/04/linux-manual-dhcp/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">/etc/resolv.conf  # dns nameserver 192.168.245.2</span><br><span class="line"></span><br><span class="line">ifconfig eth0 up</span><br><span class="line">ifconfig eth0 192.168.245.128 netmask 255.255.255.0 broadcast 192.168.245.255</span><br><span class="line">ifconfig eth0 #check ip</span><br><span class="line"></span><br><span class="line">route add default gw 192.168.245.2 eth0</span><br><span class="line">route -n # check route</span><br><span class="line"></span><br><span class="line">host only net set, no route</span><br><span class="line">vmware edit--network editor,on top list, click vmnet1, click right bottom dhch setting</span><br><span class="line">find the ip range,netmask,broadcast</span><br><span class="line">ifconfig eth0 192.168.31.128 netmask 255.255.255.0 broadcast 192.168.31.255</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux命令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux命令 </tag>
            
            <tag> ifconfig </tag>
            
            <tag> route </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gentoo完全离线安装</title>
      <link href="/2019/09/04/gentoo-offline/"/>
      <url>/2019/09/04/gentoo-offline/</url>
      
        <content type="html"><![CDATA[<p>gentoo完全离线安装，避免下载慢，也可以在其他电脑直接不联网安装</p><p>gentoo离线安装，要解决两个问题，一个是<code>emerge-webrsync</code>联网下载portage，一个是<code>emerge</code> 安装包时的下载源码，与依赖的包源码</p><p><code>emerge-webrsync</code> 可以看这个<a href="/2019/09/04/gentoo-portage/">gentoo的portage与emerge-webrsync</a><br>下载portage-20190901.tar.xz后，解压到<code>/var/db/repos/gentoo</code></p><p><code>emerge</code> 会先下载包，如果已下载对应版本的包与依赖包，就会开始解压安装。下载目录<code>/var/cache/distfiles</code>,就是<code>/etc/portage/make.conf</code>中定义的<code>DISTDIR</code>路径</p><p>下面是说明怎么下载emerge安装时的包，也可以安装完，把<code>/var/cache/distfiles</code>的包保存起来</p><p>使用vmware进入live cd下载， 有些步骤看 <a href="/2019/09/02/gentoo-quick/">快速安装最小gentoo系统</a></p><ul><li><p>boot live cd</p></li><li><p>开启ssh</p></li><li><p>分区准备</p></li><li><p>解压stage3</p></li><li><p>复制dns</p></li><li><p>配置准备 与chroot</p></li><li><p>emerge-webrsync</p></li><li><p>编译配置 与 其他配置</p></li></ul><p>可以在这里加开机快照，方便有问题直接回来，或者多试试几次不同配置要下载的包</p><p>恢复快照回来，连接ssh后的必要准备</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /mnt/gentoo</span><br><span class="line">chroot . /bin/bash</span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><p>可以设置profile</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eselect profile set default/linux/amd64/17.1</span><br></pre></td></tr></table></figure><p>minimal, quick 需要下载的包，约360M，就是默认的profile <code>eselect profile set default/linux/amd64/17.1</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">emerge --autounmask-write --update --newuse --deep --fetchonly @world</span><br><span class="line">emerge --ask --autounmask-write --fetchonly sys-kernel/gentoo-sources sys-kernel/linux-firmware</span><br><span class="line">emerge --ask --autounmask-write --fetchonly sys-boot/grub sys-boot/os-prober \</span><br><span class="line">sys-apps/iproute2 net-misc/dhcpcd net-wireless/wireless-tools net-wireless/iw net-wireless/wpa_supplicant \</span><br><span class="line">app-portage/gentoolkit</span><br></pre></td></tr></table></figure><p>gnome-systemd 需要下载的包，约1.5G</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">eselect profile set default/linux/amd64/17.1/desktop/gnome/systemd</span><br><span class="line"></span><br><span class="line">emerge --ask --autounmask-write --update --newuse --deep --fetchonly @world</span><br><span class="line">emerge --ask --autounmask-write --fetchonly sys-kernel/gentoo-sources sys-kernel/linux-firmware</span><br><span class="line">emerge --ask --autounmask-write --fetchonly sys-boot/grub sys-boot/os-prober \</span><br><span class="line">sys-apps/iproute2 net-misc/dhcpcd net-wireless/wireless-tools net-wireless/iw net-wireless/wpa_supplicant \</span><br><span class="line">app-portage/gentoolkit</span><br><span class="line">emerge --ask --autounmask-write --fetchonly x11-base/xorg-drivers</span><br><span class="line">emerge --ask --autounmask-write --fetchonly x11-base/xorg-server \</span><br><span class="line">x11-terms/xterm x11-wm/twm \</span><br><span class="line">gnome-base/gnome  gnome-extra/gnome-shell-extensions gnome-extra/chrome-gnome-shell \</span><br><span class="line">media-sound/alsa-utils \</span><br><span class="line">app-admin/conky</span><br></pre></td></tr></table></figure><p>其他需要下载的包，可以在上面加</p><p>最后通过 scp 把下载的源码包，导出来，<code>/var/cache/distfiles</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls /mnt/gentoo/var/cache/distfiles</span><br><span class="line">du -sh /mnt/gentoo/var/cache/distfiles  # 目录大小</span><br></pre></td></tr></table></figure><p>可以在vmware，新建虚拟机，host only网络，测试，但是编译时间太长了。<br>最小安装后，如果没有安装dhcpcd，下面手动配置ip</p><p>host only net set, no route<br>vmware edit–network editor,on top list, click vmnet1, click right bottom dhch setting<br>find the ip range,netmask,broadcast</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ifconfig eth0 192.168.31.128 netmask 255.255.255.0 broadcast 192.168.31.255</span><br><span class="line">ssh root@192.168.31.128</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> gentoo </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>gentoo的portage与emerge-webrsync</title>
      <link href="/2019/09/04/gentoo-portage/"/>
      <url>/2019/09/04/gentoo-portage/</url>
      
        <content type="html"><![CDATA[<p>gentoo安装时的 <code>emerge-webrsync</code> 命令就是去 <code>http://distfiles.gentoo.org/snapshots/portage-20190901.tar.xz</code> 下载最新的，好像是每日一个<br>然后解压到 <code>/var/db/repos/gentoo</code>目录</p><p><code>/var/db/repos/gentoo</code>目录，简单理解为gentoo包管理器的数据库，可以安装的包，和包的依赖关系都在这个目录里的ebuild文件</p><p><code>emerge-webrsync</code> 与 <code>emerge --sync</code> 功能一样，webrsync是下载压缩包后解压，sync是直接使用http来rsync文件，比较慢</p><p>所以可以手动安装<code>emerge-webrsync</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># scp portage-20190901.tar.xz /mnt/gentoo</span><br><span class="line">wget http://distfiles.gentoo.org/snapshots/portage-20190901.tar.xz</span><br><span class="line"></span><br><span class="line">tar xf portage-20190901.tar.xz</span><br><span class="line">rm -rf /var/db/repos/gentoo</span><br><span class="line">mv portage /var/db/repos/gentoo</span><br></pre></td></tr></table></figure><p>然后就可以配置与安装其他软件了</p>]]></content>
      
      
      <categories>
          
          <category> gentoo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> webrsync </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>archlinux制作离线安装软件包</title>
      <link href="/2019/09/03/archlinux-pkg/"/>
      <url>/2019/09/03/archlinux-pkg/</url>
      
        <content type="html"><![CDATA[<p>archlinux一般安装需要联网，然后pacstrap下载安装，其实下载好包放入&#x2F;var&#x2F;cache&#x2F;pacman&#x2F;pkg，可以快速安装，适合网速慢的，尤其是安装gnome桌面的时候，包很多，下载慢</p><p>在虚拟机内下载包，然后使用scp导出，保存</p><p>boot archiso</p><p>开启ssh</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">passwd</span><br><span class="line">systemctl start sshd</span><br><span class="line">ip -4 addr</span><br></pre></td></tr></table></figure><p>分区准备</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wipefs -a /dev/sda</span><br><span class="line">parted /dev/sda --script mklabel msdos </span><br><span class="line">parted /dev/sda --script -- mkpart primary 4MB -1</span><br><span class="line">lsblk</span><br><span class="line"></span><br><span class="line">mkfs.ext4 /dev/sda1</span><br><span class="line">mount /dev/sda1 /mnt</span><br></pre></td></tr></table></figure><p>repo地址准备</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#x27;6iServer = http://mirrors.163.com/archlinux/$repo/os/$arch&#x27; /etc/pacman.d/mirrorlist</span><br><span class="line">pacman -Sy</span><br></pre></td></tr></table></figure><p>简单初始化分区系统</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacstrap /mnt base # to init disk system, like /bin/bash, other arch-chroot error and cannot pacman -Sw download only</span><br></pre></td></tr></table></figure><p>进入chroot，配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">arch-chroot /mnt</span><br><span class="line"></span><br><span class="line">echo &quot;[archlinuxcn]</span><br><span class="line">Server = https://cdn.repo.archlinuxcn.org/\$arch&quot; &gt;&gt; /etc/pacman.conf</span><br><span class="line">pacman -Sy</span><br><span class="line">pacman -S archlinuxcn-keyring # for archlinuxcn</span><br></pre></td></tr></table></figure><p>下载需要安装的软件包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">pacman -Sw base base-devel \</span><br><span class="line">openssh \</span><br><span class="line">vim \</span><br><span class="line">grub efibootmgr dosfstools os-prober mtools \</span><br><span class="line">xorg xorg-server gnome ttf-droid wqy-microhei git xf86-video-intel xf86-video-amdgpu xf86-video-nouveau gnome-tweaks chrome-gnome-shell \</span><br><span class="line">google-chrome \</span><br><span class="line">fcitx-im fcitx-configtool fcitx-gtk2 fcitx-gtk3 fcitx-qt4 fcitx-qt5 libidn fcitx-sogoupinyin fcitx-googlepinyin \</span><br><span class="line">wireless_tools wpa_supplicant iw \</span><br><span class="line">alsa-utils \</span><br><span class="line">conky</span><br></pre></td></tr></table></figure><p>配置locale，否则repo-add会报错  bsdtar: Failed to set default locale</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -i -e &#x27;s/#en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/&#x27; /etc/locale.gen</span><br><span class="line">locale-gen</span><br></pre></td></tr></table></figure><p>制作离线包repo的db</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd /var/cache/pacman/pkg</span><br><span class="line">md5sum * &gt; md5sums   # check:cd /var/cache/pacman/pkg &amp;&amp; md5sum -c md5sums | grep -v OK</span><br><span class="line">mv md5sums ../</span><br><span class="line">repo-add ./custom.db.tar.gz ./* # md5sums in pkg will failed:No packages modified, nothing to do</span><br><span class="line">cd ..</span><br><span class="line">tar czf pkg.tar.gz pkg</span><br></pre></td></tr></table></figure><p>使用scp保存 pkg.tar.gz 与 md5sums</p><p>以后直接离线安装,rufus以iso方式写archiso到U盘，pkg.tar.gz复制到U盘根目录,启动后，直接解压包到新分区对应目录，然后配置repo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /mnt/var/cache/pacman/</span><br><span class="line">tar xzf /run/archiso/bootmnt/pkg.tar.gz -C /mnt/var/cache/pacman/</span><br><span class="line"></span><br><span class="line">echo &quot;[custom]</span><br><span class="line">Server = file:///mnt/var/cache/pacman/pkg&quot; &gt; /etc/pacman.conf</span><br><span class="line"></span><br><span class="line">pacman -Sy</span><br><span class="line">pacstrap /mnt base base-devel openssh vim grub xorg xorg-server gnome ttf-droid wqy-microhei git</span><br><span class="line"></span><br><span class="line">arch-chroot /mnt</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>gentoo的USE变量</title>
      <link href="/2019/09/03/gentoo-USE/"/>
      <url>/2019/09/03/gentoo-USE/</url>
      
        <content type="html"><![CDATA[<p>gentoo的USE变量，就是控制系统和包编译安装时的一些功能，避免编译不需要的功能，或者少编译功能</p><p><code>/etc/portage/make.conf</code>是全局设定USE，不能针对包设置,比如下面，就是系统需要的一些功能</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">USE=&quot;-qt5 -kde X gtk gnome systemd&quot;</span><br></pre></td></tr></table></figure><p><code>/etc/portage/package.use</code>或者下的那个文件，【添加一行】，时针对某个包设定功能，比如下面，就是编译<code>media-libs/mesa</code>时不要编译<code>llvm</code>功能或包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">media-libs/mesa -llvm</span><br></pre></td></tr></table></figure><p>USE修改后需要更新，因为有的包会有新的依赖或者需要重新编译</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">emerge --ask --verbose --update --deep --newuse @world</span><br></pre></td></tr></table></figure><p>清理,只有所有包的依赖关系理清楚了，才会执行清理</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">emerge --depclean</span><br><span class="line">emerge --update --newuse --deep --with-bdeps=y @world</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> gentoo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> USE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速安装最小gentoo系统</title>
      <link href="/2019/09/02/gentoo-quick/"/>
      <url>/2019/09/02/gentoo-quick/</url>
      
        <content type="html"><![CDATA[<p><a href="https://wiki.gentoo.org/wiki/Quick_Installation_Checklist">gentoo-Quick Installation</a></p><p>在vmware上测试安装成功，下载 <a href="http://distfiles.gentoo.org/releases/amd64/autobuilds/20190901T214501Z/install-amd64-minimal-20190901T214501Z.iso">install-amd64-minimal.iso</a> 和 <a href="http://distfiles.gentoo.org/releases/amd64/autobuilds/20190901T214501Z/stage3-amd64-20190901T214501Z.tar.xz">stage3-amd64.tar.xz</a></p><p>boot minimal live cd，需要按【两次】回车</p><p>开启ssh, 连接ssh方便粘贴命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">passwd</span><br><span class="line">rc-service sshd start</span><br><span class="line">ip -4 addr</span><br></pre></td></tr></table></figure><p>准备分区</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">wipefs -a /dev/sda</span><br><span class="line">parted /dev/sda --script mklabel msdos </span><br><span class="line">parted /dev/sda --script -- mkpart primary 4MB -1</span><br><span class="line">lsblk</span><br><span class="line"></span><br><span class="line">mkfs.ext4 /dev/sda1</span><br><span class="line"></span><br><span class="line">mount /dev/sda1 /mnt/gentoo</span><br></pre></td></tr></table></figure><p>展开stage3</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /mnt/gentoo</span><br><span class="line"># scp stage3 to /mnt/gentoo 或者 wget</span><br><span class="line">tar xvf stage3-amd64-20190901T214501Z.tar.xz</span><br></pre></td></tr></table></figure><p>dns</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /etc/resolv.conf etc</span><br></pre></td></tr></table></figure><p>配置准备,chroot</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mount -t proc none proc</span><br><span class="line">mount --rbind /sys sys</span><br><span class="line">mount --make-rslave sys</span><br><span class="line">mount --rbind /dev dev</span><br><span class="line">mount --make-rslave dev</span><br><span class="line"></span><br><span class="line">chroot . /bin/bash</span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><p>下载安装ebuild与portage</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">emerge-webrsync</span><br></pre></td></tr></table></figure><p>编译配置 与 其他配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/portage/make.conf # 修改第一行，其他行添加</span><br><span class="line">COMMON_FLAGS=&quot;-O2 -march=native -pipe&quot;</span><br><span class="line">MAKEOPTS=&quot;-j2&quot;</span><br><span class="line">GENTOO_MIRRORS=&quot;https://mirrors.163.com/gentoo/&quot;</span><br><span class="line">CHOST=&quot;x86_64-pc-linux-gnu&quot;</span><br><span class="line"></span><br><span class="line">passwd</span><br><span class="line"></span><br><span class="line">useradd -g users -G wheel,portage,audio,video,usb,cdrom -m qianggetaba</span><br><span class="line">passwd qianggetaba</span><br><span class="line"></span><br><span class="line">nano /etc/fstab # 添加下面</span><br><span class="line">/dev/sda1/ext4noatime0 1</span><br><span class="line"></span><br><span class="line">echo &#x27;LANG=&quot;en_US.utf8&quot;</span><br><span class="line">LC_COLLATE=&quot;C&quot;&#x27; &gt; /etc/env.d/02locale</span><br><span class="line"></span><br><span class="line">nano /etc/conf.d/hostname # 安装后电脑名，终端前缀符会显示</span><br><span class="line"></span><br><span class="line">ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br></pre></td></tr></table></figure><p>内核</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">emerge -av sys-kernel/gentoo-sources sys-kernel/linux-firmware</span><br><span class="line"></span><br><span class="line">cd /usr/src/linux</span><br><span class="line">make localyesconfig</span><br><span class="line">make -j2</span><br><span class="line"></span><br><span class="line">make modules_install</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>grub</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">emerge --ask sys-boot/grub</span><br><span class="line">grub-install --target=i386-pc /dev/sda</span><br><span class="line">grub-mkconfig -o /boot/grub/grub.cfg # 输出：Found vmlinuz-3.14.4-gento</span><br></pre></td></tr></table></figure><p>其他软件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 网络管理，尤其dhcpcd</span><br><span class="line">emerge --ask sys-apps/iproute2 net-misc/dhcpcd net-wireless/wireless-tools net-wireless/iw net-wireless/wpa_supplicant</span><br><span class="line"></span><br><span class="line"># equery 等等包管理工具</span><br><span class="line">emerge --ask app-portage/gentoolkit</span><br></pre></td></tr></table></figure><p>安装完事</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br><span class="line">cd ~</span><br><span class="line">umount -R /mnt/gentoo</span><br><span class="line"></span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><p>重启等待进入新系统，试试能 ping联网就行，其他可以慢慢来，再试试上面的sshd能不能启动,可能需要启动<code>dhcpcd</code></p>]]></content>
      
      
      <categories>
          
          <category> gentoo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gentoo-quick </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gentoo的一些总结</title>
      <link href="/2019/08/30/gentoo-common/"/>
      <url>/2019/08/30/gentoo-common/</url>
      
        <content type="html"><![CDATA[<p>live cd 的chroot后，emerge 会下载源码并编译安装，下载路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 查找压缩包路径</span><br><span class="line">find /mnt/gentoo \( -name &quot;*.tar.bz2&quot; -o -name &quot;*.tar.xz&quot; -o -name &quot;*.tar.gz&quot; \)</span><br><span class="line"></span><br><span class="line">ls /mnt/gentoo/var/cache/distfiles/ # emerge fetch download path</span><br><span class="line"></span><br><span class="line"># 查看目录大小</span><br><span class="line">du -sh /mnt/gentoo/var/cache/distfiles/</span><br></pre></td></tr></table></figure><p>live cd安装时，看看硬盘占用大小</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df -h |grep /mnt/gentoo</span><br></pre></td></tr></table></figure><p>已经安装的包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls /var/db/pkg/* # installed package</span><br></pre></td></tr></table></figure><p>在live cd安装完后，进入系统，有问题，回到live cd 并正常启动后，开始进入chroot的步骤</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/sda1 /mnt/gentoo</span><br><span class="line"></span><br><span class="line">mount --types proc /proc /mnt/gentoo/proc</span><br><span class="line">mount --rbind /sys /mnt/gentoo/sys</span><br><span class="line">mount --make-rslave /mnt/gentoo/sys</span><br><span class="line">mount --rbind /dev /mnt/gentoo/dev</span><br><span class="line">mount --make-rslave /mnt/gentoo/dev</span><br><span class="line"></span><br><span class="line">chroot /mnt/gentoo /bin/bash</span><br><span class="line">source /etc/profile</span><br><span class="line">export PS1=&quot;(chroot) $&#123;PS1&#125;&quot;</span><br><span class="line"></span><br><span class="line"># 执行其他操作，安装软件等等</span><br></pre></td></tr></table></figure><p>按照教程安装了<code>sys-kernel/genkernel</code>，想安装systemd, 按教程需要安装<code>sys-kernel/genkernel-next</code>，提示冲突</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 卸载 sys-kernel/genkernel</span><br><span class="line">emerge -cav sys-kernel/genkernel # remove</span><br></pre></td></tr></table></figure><p>设置swap虚拟内存</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 4g, 1m是512m</span><br><span class="line">dd if=/dev/zero of=/swapfile count=8M</span><br><span class="line">mkswap /swapfile</span><br><span class="line"></span><br><span class="line">nano /etc/fstab </span><br><span class="line">/swapfile        none        swap        sw,loop        0 0</span><br><span class="line"></span><br><span class="line">swapon -a</span><br></pre></td></tr></table></figure><p>硬盘只分一个区</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">parted /dev/sda --script -- mkpart primary 4MB -1</span><br></pre></td></tr></table></figure><p>每次修改了USE后，更新world, 因为有的包会有新的依赖或者需要重新编译</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">emerge --ask --verbose --update --deep --newuse @world</span><br></pre></td></tr></table></figure><p>emerge-webrsync 说明</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">下载地址</span><br><span class="line">http://distfiles.gentoo.org/snapshots/portage-20190901.tar.xz</span><br><span class="line"></span><br><span class="line">portage-20190901.tar.xz里面是可以安装的包的信息，相当于包管理器的db</span><br><span class="line"></span><br><span class="line">portage下载路径，目录后缀随机</span><br><span class="line">/mnt/gentoo/var/tmp/portage/webrsync-iXsqVl/portage-20190901.tar.xz</span><br><span class="line"></span><br><span class="line">/var/db/repos/gentoo/ 是portage解压路径，可以看看包内文件目录是一致的</span><br><span class="line"></span><br><span class="line">看看有什么选项</span><br><span class="line">emerge-webrsync -h</span><br><span class="line"></span><br><span class="line">保留下载的portage包到/etc/portage/make.conf的DISTDIR目录/var/cache/distfiles，也是emerge时，下载的源码包路径</span><br><span class="line">emerge-webrsync -k</span><br></pre></td></tr></table></figure><p>查看所有网卡</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">如果这样都没有就是驱动问题，可能需要重新配置编译内核</span><br><span class="line">ifconfig -a</span><br></pre></td></tr></table></figure><p>安装systemd与<a href="https://wiki.gentoo.org/wiki/GNOME/Guide">gnome</a>,<a href="https://wiki.gentoo.org/wiki/Xorg/Guide#make.conf">VIDEO_CARDS和INPUT_DEVICES</a><br>先<a href="https://wiki.gentoo.org/wiki/Xorg/Guide">Xorg</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/portage/make.conf</span><br><span class="line">USE=&quot;-qt5 -kde X gtk gnome systemd&quot;</span><br><span class="line"># synaptics for touchpad</span><br><span class="line">INPUT_DEVICES=&quot;libinput keyboard mouse synaptics&quot;</span><br><span class="line">VIDEO_CARDS=&quot;vmware&quot;</span><br><span class="line"></span><br><span class="line"># llvm for Enable LLVM backend for Gallium3D, but llvm compile so slow and easy oom</span><br><span class="line">/etc/portage/package.use 或者/etc/portage/package.use下的这个文件 添加一行</span><br><span class="line">media-libs/mesa -llvm</span><br><span class="line"></span><br><span class="line"># xorg</span><br><span class="line">emerge --pretend --verbose x11-base/xorg-drivers  #显示要安装的包，与所有VIDEO_CARDS INPUT_DEVICES 变量，以便按需设置</span><br><span class="line">emerge --ask x11-base/xorg-server</span><br><span class="line">env-update &amp;&amp; source /etc/profile</span><br><span class="line"></span><br><span class="line"># 包很多，根据配置大约有350-380个包，很慢</span><br><span class="line">emerge --ask gnome-base/gnome</span><br><span class="line"></span><br><span class="line">env-update &amp;&amp; source /etc/profile</span><br><span class="line">getent group plugdev # 输出：plugdev:x:104:</span><br><span class="line"></span><br><span class="line">gpasswd -a &lt;username&gt; plugdev</span><br><span class="line"></span><br><span class="line">systemctl start gdm</span><br></pre></td></tr></table></figure><p>安装包时候会自动加入一些USE，设置功能，可以这样查看系统所有USE</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">emerge --info | grep ^USE</span><br><span class="line">emerge --ask --autounmask-write package  # 自动合并包配置，USE等等</span><br></pre></td></tr></table></figure><p>安装具体包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ls var/db/repos/gentoo/dev-java/oracle-jdk-bin/</span><br><span class="line">oracle-jdk-bin-1.8.0.202.ebuild  oracle-jdk-bin-11.0.2.ebuild</span><br><span class="line"></span><br><span class="line">emerge -av =oracle-jdk-bin-1.8.0.202</span><br></pre></td></tr></table></figure><p>列出，将要安装的包，包括要按照的依赖包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">emerge --ask --verbose --deep --with-bdeps=y --pretend gnome</span><br></pre></td></tr></table></figure><p>依赖于webkit-gtk的包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">equery depends webkit-gtk</span><br></pre></td></tr></table></figure><p>gnome依赖的包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">equery depgraph --depth=2 gnome</span><br></pre></td></tr></table></figure><p>添加config编译参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EXTRA_ECONF=&quot;--with-bzip2=lbzip2&quot; emerge -avD tar</span><br></pre></td></tr></table></figure><p>一些清理命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">eclean distfiles</span><br><span class="line">eclean packages</span><br><span class="line">emerge --ask app-admin/eclean-kernel</span><br></pre></td></tr></table></figure><p>emerge -av sudo # sudo command, edit &#x2F;etc&#x2F;sudoers<br>emerge -av lbzip2 # paralel compress<br>emerge -av google-chrome<br>emerge -av wqy-microhei # chrome chinese font<br>emerge -av conky</p><p>emerge –pretend @system<br>emerge –pretend @world<br>emerge -uDN @world # common command to update world</p><p>&#x2F;usr&#x2F;sbin&#x2F;emaint –check world  # check world file</p><p>regenworld # add pkg to world file</p><p>world file  &#x2F;var&#x2F;lib&#x2F;portage&#x2F;world empty</p><p>eselect profile set default&#x2F;linux&#x2F;amd64&#x2F;17.1&#x2F;desktop&#x2F;gnome&#x2F;systemd # &#x2F;etc&#x2F;portage&#x2F;make.profile&#x2F;parent, parent profiles</p><h1 id="query-variables"><a href="#query-variables" class="headerlink" title="query variables"></a>query variables</h1><p>portageq envvar EROOT<br>portageq envvar INPUT_DEVICES<br>portageq config_protect<br>portageq distdir<br>portageq pkgdir<br>portageq repos_config &#x2F;<br>portageq get_repos &#x2F;</p><p>sys-boot&#x2F;os-prober<br>dev-libs&#x2F;libisoburn # grub-mkrescue, generating grub rescue iso</p><p>&#x2F;var&#x2F;tmp&#x2F;portage&#x2F;net-libs&#x2F;webkit-gtk-2.24.3&#x2F;temp&#x2F;build.log is compile webkit log</p>]]></content>
      
      
      <categories>
          
          <category> gentoo </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>gentoo安装gnome桌面与systemd</title>
      <link href="/2019/08/30/gentoo-gnome/"/>
      <url>/2019/08/30/gentoo-gnome/</url>
      
        <content type="html"><![CDATA[<p>安装有桌面环境的gentoo系统，gentoo默认是openrc的启动init</p><p>官方教程：<br>Installing Gentoo部分直到<code>Installing the Gentoo base system</code>之前 <a href="https://wiki.gentoo.org/wiki/Handbook:AMD64">Gentoo AMD64 Handbook</a><br>接着上面的<code>Installing the Gentoo base system</code> <a href="https://wiki.gentoo.org/wiki/Systemd/Installing_Gnome3_from_scratch">systemd&#x2F;Installing Gnome3 from scratch</a></p><p>我安装过程：</p><p>在virtual box内安装，硬盘设置大一些，20-50g，因为源码，编译生成的中间文件，安装软件会占用很大空间。</p><p>新建虚拟机，virtual box网卡选bridge，enp2s0，不然不能在虚拟机外面ssh，vmware就用默认nat</p><p>加载 minimal install cd 启动</p><p>启动后需要 按一次 enter 回车，启动进入cd</p><p>再按一次 enter 回车，选择默认键盘keymap</p><p>出现命令提示符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">livecd ~ #</span><br></pre></td></tr></table></figure><p>设置root密码，开启ssh连接，你在虚拟机直接输后面的命令也行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">passwd</span><br><span class="line">rc-service sshd start # 或者 /etc/init.d/sshd start</span><br><span class="line">ip -4 addr</span><br></pre></td></tr></table></figure><p>在外面终端连接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 每次重启连接，需要先移除先前的记录的ssh fingerprint</span><br><span class="line"># 重启后就变了,会拒绝ssh连接</span><br><span class="line">ssh-keygen -R 192.168.1.49</span><br><span class="line">ssh root@192.168.1.49</span><br></pre></td></tr></table></figure><p>准备分区，使用整个磁盘，或者就一个分区，太多分区，对于第一次安装会造成混乱</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">fdisk /dev/sda</span><br><span class="line">输入n 新建分区</span><br><span class="line">输入p 主分区</span><br><span class="line">输入1 分区号1</span><br><span class="line">enter 默认开始扇区</span><br><span class="line">enter 默认结束扇区</span><br><span class="line">输入w 写入磁盘分区表</span><br><span class="line"></span><br><span class="line">格式化为ext4</span><br><span class="line">mkfs.ext4 /dev/sda1</span><br><span class="line">mount /dev/sda1 /mnt/gentoo</span><br></pre></td></tr></table></figure><p>展开stage3到挂载分区，1种是按照教程下载，2种是通过scp把下载的stages3复制过去</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd /mnt/gentoo</span><br><span class="line">wget http://distfiles.gentoo.org/releases/amd64/autobuilds/20190825T214502Z/stage3-amd64-20190825T214502Z.tar.xz</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line">scp Downloads/stage3-amd64-20190825T214502Z.tar.xz root@192.168.1.49:/mnt/gentoo</span><br></pre></td></tr></table></figure><p>展开，【一定】要进入到挂载点再执行tar解压</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd /mnt/gentoo</span><br><span class="line">tar xpvf stage3-amd64-20190825T214502Z.tar.xz --xattrs-include=&#x27;*.*&#x27; --numeric-owner</span><br><span class="line"></span><br><span class="line">解压完，回到live cd的根目录/root,开始配置与安装</span><br><span class="line">cd ~</span><br></pre></td></tr></table></figure><p>修改编译选项与软件包镜像地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">nano /mnt/gentoo/etc/portage/make.conf</span><br><span class="line"></span><br><span class="line">COMMON_FLAGS=&quot;-O2 -march=native -pipe&quot; # 添加-march=native，就是live cd的位宽，x86_64</span><br><span class="line"></span><br><span class="line">MAKEOPTS=&quot;-j2&quot; #末尾加</span><br><span class="line"></span><br><span class="line">GENTOO_MIRRORS=&quot;https://mirrors.163.com/gentoo/&quot; #末尾加，与mirrorselect效果一样</span><br></pre></td></tr></table></figure><p>其他准备与进入chroot环境的配置，具体可以看看官方文档</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># repo</span><br><span class="line">mkdir --parents /mnt/gentoo/etc/portage/repos.conf</span><br><span class="line">cp /mnt/gentoo/usr/share/portage/config/repos.conf /mnt/gentoo/etc/portage/repos.conf/gentoo.conf</span><br><span class="line"></span><br><span class="line"># dns</span><br><span class="line">cp --dereference /etc/resolv.conf /mnt/gentoo/etc/</span><br><span class="line"></span><br><span class="line">mount --types proc /proc /mnt/gentoo/proc</span><br><span class="line">mount --rbind /sys /mnt/gentoo/sys</span><br><span class="line">mount --make-rslave /mnt/gentoo/sys</span><br><span class="line">mount --rbind /dev /mnt/gentoo/dev</span><br><span class="line">mount --make-rslave /mnt/gentoo/dev</span><br><span class="line"></span><br><span class="line">chroot /mnt/gentoo /bin/bash</span><br><span class="line">source /etc/profile</span><br><span class="line">export PS1=&quot;(chroot) $&#123;PS1&#125;&quot;</span><br></pre></td></tr></table></figure><p>ebuild，应该是编译环境和软件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 会下载</span><br><span class="line">emerge-webrsync</span><br></pre></td></tr></table></figure><p>如果是虚拟机可以在此时，建立快照，方便测试不同profile</p><p>选择profile</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">eselect profile list</span><br><span class="line">eselect profile set default/linux/amd64/17.0/desktop/gnome/systemd</span><br></pre></td></tr></table></figure><p>@world，可以理解为Windows注册表一样的全局配置，根据你的profile去下载与配置,最好配置swap，防止oom导致编译错误</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># 会下载与编译安装，就相当于系统全局更新</span><br><span class="line">emerge --ask --verbose --update --deep --newuse @world</span><br><span class="line"></span><br><span class="line">emerge --depclean</span><br><span class="line">emerge --update --newuse --deep --with-bdeps=y @world</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;Asia/Shanghai&#x27; &gt; /etc/timezone</span><br><span class="line">emerge --config sys-libs/timezone-data</span><br><span class="line"></span><br><span class="line">echo &#x27;en_US.UTF-8 UTF-8&#x27; &gt;&gt;/etc/locale.gen</span><br><span class="line">echo &#x27;zh_CN.UTF-8 UTF-8&#x27; &gt;&gt;/etc/locale.gen</span><br><span class="line">locale-gen</span><br><span class="line"></span><br><span class="line"># 与locale set相同</span><br><span class="line">echo &#x27;LANG=&quot;en_US.utf8&quot;</span><br><span class="line">LC_COLLATE=&quot;C&quot;&#x27; &gt; /etc/env.d/02locale</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">env-update &amp;&amp; source /etc/profile &amp;&amp; export PS1=&quot;(chroot) $&#123;PS1&#125;&quot;</span><br></pre></td></tr></table></figure><p>内核</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">emerge --ask sys-kernel/gentoo-sources</span><br><span class="line">emerge --ask sys-kernel/genkernel-next # 可能需要etc-update</span><br><span class="line">emerge --ask sys-kernel/linux-firmware</span><br></pre></td></tr></table></figure><p>内核编译</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># nano /etc/genkernel.conf , MAKEOPTS=&quot;j2&quot; UDEV=&quot;yes&quot;</span><br><span class="line">genkernel --menuconfig all</span><br><span class="line"></span><br><span class="line"># 在内核编译菜单最下面选中systemd与openrc, 按空格，显示星号，选择，然后save，exit，exit，保存退出后会自动开始编译</span><br><span class="line">Gentoo Linux ---&gt;</span><br><span class="line">        Support for init systems, system and service managers ---&gt;</span><br><span class="line">                [*]Openrc </span><br><span class="line">                [*] systemd</span><br></pre></td></tr></table></figure><p>加入fstab</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/fstab</span><br><span class="line">/dev/sda1               /               ext4            rw,relatime     0 1</span><br></pre></td></tr></table></figure><p>hostname会显示在登录系统后的，终端提示符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;hostname=&quot;mygentoo&quot;&#x27; &gt; /etc/conf.d/hostname</span><br><span class="line"></span><br><span class="line">nano /etc/hosts , make sure first line</span><br><span class="line">127.0.0.1     mygentoo.homenetwork mygentoo localhost</span><br><span class="line"></span><br><span class="line"># root password</span><br><span class="line">passwd</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -sf /proc/self/mounts /etc/mtab</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">emerge --ask sys-apps/systemd</span><br><span class="line">emerge --ask sys-boot/grub:2</span><br></pre></td></tr></table></figure><p>安装grub引导</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/default/grub</span><br><span class="line">GRUB_CMDLINE_LINUX=&quot;rootfstype=ext4 init=/lib/systemd/systemd&quot;  # 添加</span><br><span class="line"></span><br><span class="line">grub-install --target=i386-pc /dev/sda</span><br><span class="line">grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure><p>exit<br>poweroff</p><p>正常安装完，去掉virtual box连接的iso后再启动，否则可能出现 <code>FATAL: INT18: BOOT FAILURE </code></p><p>开机后可能需要开启ssh</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ping www.baidu.com</span><br><span class="line">dhcpcd</span><br><span class="line"></span><br><span class="line"># 会提示/sbin/openrc-run bad interpreter</span><br><span class="line"># 因为/etc/init.d/sshd是脚本，开始行设置的解释器就是/sbin/openrc-run，这是gentoo系统默认openrc的启动脚本</span><br><span class="line"># /etc/init.d/sshd start </span><br><span class="line"></span><br><span class="line">systemctl start sshd</span><br></pre></td></tr></table></figure><p>安装xorg与gnome</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lspci | grep -i VGA</span><br><span class="line">nano /etc/portage/make.conf</span><br><span class="line">VIDEO_CARDS=&quot;vmware&quot;  # intel (&quot;intel&quot;),amd (&quot;radeon&quot;,&quot;amdgpu&quot;), nvidia (&quot;nouveau&quot;,&quot;nvidia&quot;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">emerge --ask x11-base/xorg-server</span><br></pre></td></tr></table></figure><p>下面是安装xorg提供的xterm与twm，相当于demo，可以用来测试xorg是否安装正常</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">emerge --ask x11-terms/xterm x11-wm/twm</span><br><span class="line"></span><br><span class="line"># 执行后，会出现图形化的终端，可以移动鼠标，说明安装xorg正常，每个终端输入exit，</span><br><span class="line">startx</span><br><span class="line"># 卸载</span><br><span class="line">emerge --ask --depclean --verbose x11-terms/xterm x11-wm/twm</span><br></pre></td></tr></table></figure><p>安装gnome，包很多，慢慢等待编译完成</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">emerge --ask gnome-base/gnome</span><br><span class="line"></span><br><span class="line"># 启动gnome桌面</span><br><span class="line">systemctl start gdm</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 启动并设置为开机启动</span><br><span class="line">systemctl enable gdm --now</span><br></pre></td></tr></table></figure><p>在系统未稳定执行，还是开机到命令行终端后，在执行start gdm启动桌面，安全</p>]]></content>
      
      
      <categories>
          
          <category> gentoo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gentoo桌面 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装最小gentoo系统</title>
      <link href="/2019/08/29/gentoo-minimal/"/>
      <url>/2019/08/29/gentoo-minimal/</url>
      
        <content type="html"><![CDATA[<p>gentoo是通过编译源码安装系统与软件的linux发行版，安装时间比较长，配置比较复杂。</p><p>64位gentoo安装官方教程<a href="https://wiki.gentoo.org/wiki/Handbook:AMD64">gentoo-x86_64 wiki</a></p><p>从 <a href="https://www.gentoo.org/downloads/">Gentoo-Downloads</a> 下载 <a href="http://distfiles.gentoo.org/releases/amd64/autobuilds/20190828T214505Z/install-amd64-minimal-20190828T214505Z.iso">minimal install cd</a> 与 <a href="http://distfiles.gentoo.org/releases/amd64/autobuilds/20190828T214505Z/stage3-amd64-20190828T214505Z.tar.xz">stage3</a></p><p>开始安装前的一些关于<code>gentoo</code>的说明，方便理解gentoo系统，对于安装过程的命令和问题等等有所了解，避免困惑</p><ul><li><p>minimal install cd 就是一个live cd的启动进入安装环境的系统镜像。</p></li><li><p>stage 3是【准】系统文件，把要安装gentoo的分区格式化好后，解压 stage 3 到这个分区，但是并不包括kernel和软件</p></li><li><p>emerge是gentoo的包管理器，会根据你要安装的软件，查找依赖的软件，下载相关【源码】后，编译安装，每次执行都是重新编译安装</p></li><li><p>emerge运行时，偶尔会提示需要更新配置文件</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IMPORTANT: 2 config files in &#x27;/etc/portage&#x27; need updating</span><br></pre></td></tr></table></figure><p>  原因：安装软件后，软件可能需要修改配置，但是不是直接修改了，而是在同一目录生成一个._c00*这样类似的文件，emerge发现后，会提示你update。</p><p>  一般都是这个配置文件：<code>/etc/portage/package.use/zz-autounmask</code> 屏蔽安装包</p><p>  解决：运行 <code>etc-update</code>,输入 <code>-3</code>表示自动 merge 合并,然后会提示你是否覆盖，输入<code>y</code>。就是自动把新生成的配置._c00*文件 mv 到为要修改的配置文件</p></li><li><p>profile的选择，gentoo是从源码编译安装，安装时，需要选择系统的类型</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root #eselect profile list</span><br><span class="line">Available profile symlink targets:</span><br><span class="line">[1]   default/linux/amd64/17.0 *</span><br><span class="line">[2]   default/linux/amd64/17.0/desktop</span><br><span class="line">[3]   default/linux/amd64/17.0/desktop/gnome</span><br><span class="line">[4]   default/linux/amd64/17.0/desktop/kde</span><br></pre></td></tr></table></figure><p>  可以理解为，确定系统类型，然后再用emerge下载时会根据你选择的类型，找到合适版本的软件，但是profile选择的越多，编译越麻烦，越容易出错。第一次就选择命令行的 default&#x2F;linux&#x2F;amd64&#x2F;17.0，安装完，进入系统，等熟悉了，可以安装其他软件，并不是固定的</p></li><li><p>emerge编译安装出错，先dmesg看看有没有oom (out of memory)，kill cc1plus等等信息，说明编译过程中内存溢出导致编译错误。系统安装过程会设置gcc编译的并发数 <code>-j</code>,可能数太多，内存不够用，并不是<code>-j</code>为cpu核数+1就万事大吉，j是job的意思，每个job需要的内存也不一定。尤其是编译profile为desktop时，软件太多，很有可能这样出错。</p></li><li><p>nano编辑器的使用。gentoo的live cd默认是nano编辑器</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /path/to/file</span><br></pre></td></tr></table></figure><p>  打开文件后直接就像普通文本编辑器一样，直接可以编辑，修改删除等等，编辑完成后，按 <code>ctrl + x</code> 退出，会提示是否保存，输入<code>y</code>，然后会显示文件路径，提示是否写入，按<code>enter</code>,就好了，没有修改按 <code>ctrl + x</code> 直接退出</p></li></ul><p>所以我建议先安装最小gentoo系统，熟悉一次流程，能够正常安装启动进入了，再试试其他的配置。由于是编译安装，耗时是肯定的。</p><p>下面是我总结的安装过程，对照上面提到的官方wiki教程，对比着安装</p><p>在virtual box内安装，硬盘设置大一些，20-50g，因为源码，编译生成的中间文件，安装软件会占用很大空间。如果是minimal的8g硬盘可以。</p><p>新建虚拟机，virtual box网卡选bridge，enp2s0，不然不能在虚拟机外面ssh，vmware就用默认nat</p><p>加载 minimal install cd 启动</p><p>启动后需要 按一次 enter 回车，启动进入cd</p><p>再按一次 enter 回车，选择默认键盘keymap</p><p>出现命令提示符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">livecd ~ #</span><br></pre></td></tr></table></figure><p>设置root密码，开启ssh连接，你在虚拟机直接输后面的命令也行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">passwd</span><br><span class="line">rc-service sshd start # 或者 /etc/init.d/sshd start</span><br><span class="line">ip -4 addr</span><br></pre></td></tr></table></figure><p>在外面终端连接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 每次重启连接，需要先移除先前的记录的ssh fingerprint</span><br><span class="line"># 重启后就变了,会拒绝ssh连接</span><br><span class="line">ssh-keygen -R 192.168.1.49</span><br><span class="line">ssh root@192.168.1.49</span><br></pre></td></tr></table></figure><p>准备分区，使用整个磁盘，或者就一个分区，太多分区，对于第一次安装会造成混乱</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">fdisk /dev/sda</span><br><span class="line">输入n 新建分区</span><br><span class="line">输入p 主分区</span><br><span class="line">输入1 分区号1</span><br><span class="line">enter 默认开始扇区</span><br><span class="line">enter 默认结束扇区</span><br><span class="line">输入w 写入磁盘分区表</span><br><span class="line"></span><br><span class="line">格式化为ext4</span><br><span class="line">mkfs.ext4 /dev/sda1</span><br><span class="line">mount /dev/sda1 /mnt/gentoo</span><br></pre></td></tr></table></figure><p>展开stage3到挂载分区，1种是按照教程下载，地址就是上面的stage3地址，2种是通过scp把下载的stages3复制过去</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd /mnt/gentoo</span><br><span class="line">wget http://distfiles.gentoo.org/releases/amd64/autobuilds/20190825T214502Z/stage3-amd64-20190825T214502Z.tar.xz</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line">scp Downloads/stage3-amd64-20190825T214502Z.tar.xz root@192.168.1.49:/mnt/gentoo</span><br></pre></td></tr></table></figure><p>展开，【一定】要进入到挂载点再执行tar解压</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd /mnt/gentoo</span><br><span class="line">tar xpvf stage3-amd64-20190825T214502Z.tar.xz --xattrs-include=&#x27;*.*&#x27; --numeric-owner</span><br><span class="line"></span><br><span class="line">解压完，回到live cd的根目录/root,开始配置与安装</span><br><span class="line">cd ~</span><br></pre></td></tr></table></figure><p>修改编译选项与软件包镜像地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">nano /mnt/gentoo/etc/portage/make.conf </span><br><span class="line"></span><br><span class="line">COMMON_FLAGS=&quot;-O2 -march=native -pipe&quot; # 添加-march=native，就是live cd的位宽，x86_64</span><br><span class="line"></span><br><span class="line">MAKEOPTS=&quot;-j2&quot; #末尾加</span><br><span class="line"></span><br><span class="line">GENTOO_MIRRORS=&quot;https://mirrors.163.com/gentoo/&quot; #末尾加，与mirrorselect效果一样</span><br></pre></td></tr></table></figure><p>其他准备与进入chroot环境的配置，具体可以看看官方文档</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># repo</span><br><span class="line">mkdir --parents /mnt/gentoo/etc/portage/repos.conf</span><br><span class="line">cp /mnt/gentoo/usr/share/portage/config/repos.conf /mnt/gentoo/etc/portage/repos.conf/gentoo.conf</span><br><span class="line"></span><br><span class="line"># dns</span><br><span class="line">cp --dereference /etc/resolv.conf /mnt/gentoo/etc/</span><br><span class="line"></span><br><span class="line">mount --types proc /proc /mnt/gentoo/proc</span><br><span class="line">mount --rbind /sys /mnt/gentoo/sys</span><br><span class="line">mount --make-rslave /mnt/gentoo/sys</span><br><span class="line">mount --rbind /dev /mnt/gentoo/dev</span><br><span class="line">mount --make-rslave /mnt/gentoo/dev</span><br><span class="line"></span><br><span class="line">chroot /mnt/gentoo /bin/bash</span><br><span class="line">source /etc/profile</span><br><span class="line">export PS1=&quot;(chroot) $&#123;PS1&#125;&quot;</span><br></pre></td></tr></table></figure><p>ebuild，应该是编译环境和软件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 会下载</span><br><span class="line">emerge-webrsync</span><br></pre></td></tr></table></figure><p>如果是虚拟机可以在此时，建立快照，方便测试不同profile</p><p>选择profile</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">eselect profile list</span><br><span class="line"></span><br><span class="line"># profile 的序号是会变的，重启后，再查询就不一样了</span><br><span class="line">eselect profile set 2</span><br><span class="line"># 或者</span><br><span class="line">eselect profile set default/linux/amd64/17.0</span><br></pre></td></tr></table></figure><p>@world，可以理解为Windows注册表一样的全局配置，根据你的profile去下载与配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 会下载与编译安装，就相当于系统全局更新</span><br><span class="line">emerge --ask --verbose --update --deep --newuse @world</span><br><span class="line"></span><br><span class="line">emerge --depclean</span><br><span class="line">emerge --update --newuse --deep --with-bdeps=y @world</span><br><span class="line"></span><br><span class="line">USE=&quot;-policykit&quot; # /etc/portage/make.conf , skip spidermonkey,equery d spidermonkey</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;Asia/Shanghai&#x27; &gt; /etc/timezone</span><br><span class="line">emerge --config sys-libs/timezone-data</span><br><span class="line"></span><br><span class="line">echo &#x27;en_US.UTF-8 UTF-8&#x27; &gt;&gt;/etc/locale.gen</span><br><span class="line">echo &#x27;zh_CN.UTF-8 UTF-8&#x27; &gt;&gt;/etc/locale.gen</span><br><span class="line">locale-gen</span><br><span class="line"></span><br><span class="line"># 与locale set相同</span><br><span class="line">echo &#x27;LANG=&quot;en_US.utf8&quot;</span><br><span class="line">LC_COLLATE=&quot;C&quot;&#x27; &gt; /etc/env.d/02locale</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">env-update &amp;&amp; source /etc/profile &amp;&amp; export PS1=&quot;(chroot) $&#123;PS1&#125;&quot;</span><br></pre></td></tr></table></figure><p>内核</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">emerge --ask sys-kernel/gentoo-sources</span><br><span class="line"></span><br><span class="line"># 提示update configuration，可能需要etc-update</span><br><span class="line">emerge --ask sys-kernel/genkernel</span><br><span class="line"></span><br><span class="line"># 生成kernel initramfs, 很慢</span><br><span class="line">genkernel all</span><br></pre></td></tr></table></figure><p>加入fstab</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/fstab</span><br><span class="line">/dev/sda1               /               ext4            rw,relatime     0 1</span><br></pre></td></tr></table></figure><p>hostname会显示在登录系统后的，终端提示符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;hostname=&quot;mygentoo&quot;&#x27; &gt; /etc/conf.d/hostname</span><br><span class="line"></span><br><span class="line">nano /etc/hosts , make sure first line</span><br><span class="line">127.0.0.1     mygentoo.homenetwork mygentoo localhost</span><br><span class="line"></span><br><span class="line"># root password</span><br><span class="line">passwd</span><br></pre></td></tr></table></figure><p>其他一些软件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">emerge --ask sys-fs/e2fsprogs</span><br><span class="line">emerge --ask net-misc/dhcpcd</span><br><span class="line">emerge --ask net-wireless/iw</span><br><span class="line">emerge --ask net-wireless/wpa_supplicant</span><br><span class="line">emerge --ask sys-boot/grub:2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">grub-install --target=i386-pc /dev/sda</span><br><span class="line">grub-mkconfig -o /boot/grub/grub.cfg</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">exit</span><br><span class="line">poweroff</span><br></pre></td></tr></table></figure><p>正常安装完，去掉virtual box连接的iso后再启动，否则可能出现 <code>FATAL: INT18: BOOT FAILURE </code></p><p>如果都安装都正常，开启虚拟机，看见grub选项，正常进入系统</p><p>minimal正常安装后，可以试试profile为<code>eselect profile set default/linux/amd64/17.0/desktop/gnome/systemd</code>的系统配置，安装的软件很多，编译时间很长，很容易出现oom导致的编译错误，不要把<code>-j</code>设置太大</p><p>gentoo有别于其他linux发行版，就是他是下载软件源码后编译安装，比较费时，编译过程很容易出错。还有其他什么USE等等的设置，我还不会用。</p>]]></content>
      
      
      <categories>
          
          <category> gentoo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gentoo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>virtualbox内的archlinux安装Guest Additions iso</title>
      <link href="/2019/08/28/archlinux-virtualbox-guest/"/>
      <url>/2019/08/28/archlinux-virtualbox-guest/</url>
      
        <content type="html"><![CDATA[<p>在virtual box内的archlinux，命令行下，安装Guest Additions 的iso</p><p>需要安装<code>base-devel</code>,<code>linux-headers</code>注意版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pacman -Sy</span><br><span class="line">pacman -S base-devel linux-headers</span><br></pre></td></tr></table></figure><p>查找对应版本，下载安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">https://archive.archlinux.org/packages/l/linux-headers/</span><br><span class="line">scp Downloads/linux-headers-5.1.15.arch1-1-x86_64.pkg.tar.xz root@192.168.1.43:/root</span><br><span class="line">pacman -U linux-headers-5.1.15.arch1-1-x86_64.pkg.tar.xz</span><br><span class="line">``</span><br><span class="line"></span><br><span class="line">挂载镜像后``lsblk``查看</span><br></pre></td></tr></table></figure><p>sr0 11:0 1  73.6M 0 rom</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">mount</span><br></pre></td></tr></table></figure><p>mkdir &#x2F;mnt&#x2F;iso<br>mount &#x2F;dev&#x2F;sr0 &#x2F;mnt&#x2F;iso<br>ls &#x2F;mnt&#x2F;iso</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">开始安装</span><br></pre></td></tr></table></figure><p>&#x2F;mnt&#x2F;iso&#x2F;VBoxLinuxAdditions.run</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">重启</span><br></pre></td></tr></table></figure><p>systemctl reboot<br>&#96;&#96;&#96;</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>使用archiso镜像快速安装--mbr方式</title>
      <link href="/2019/08/28/archlinux-iso/"/>
      <url>/2019/08/28/archlinux-iso/</url>
      
        <content type="html"><![CDATA[<p>下载的<code>archlinux</code>镜像<code>archiso</code>有600m多，但是安装的时候都是<code>pacstrap</code>去联网下载，安装时间长，慢。可以先使用镜像安装系统，之后启动安装好的系统可以升级和安装其他软件，很方便</p><p>官方文档教程<a href="https://wiki.archlinux.org/index.php/Offline_installation">ArchLinux–Offline installation</a></p><p>以下是我整理的，在virtual box内安装。virtual box的网卡需要设置为Bridge Adapter,网卡名称类似enp2s0，这样才能在外面用ssh连接到里面的虚拟机，方便输入命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"># arch install only iso without download</span><br><span class="line"></span><br><span class="line"># boot archiso</span><br><span class="line"></span><br><span class="line">ping www.baidu.com</span><br><span class="line">ip -4 addr</span><br><span class="line">passwd</span><br><span class="line">systemctl start sshd</span><br><span class="line"></span><br><span class="line"># connect to vm</span><br><span class="line">ssh root@192.168.1.43</span><br><span class="line"></span><br><span class="line"># delete all partition</span><br><span class="line">wipefs -a /dev/sda</span><br><span class="line"></span><br><span class="line"># use whole sda</span><br><span class="line">sed -e &#x27;s/\s*\([\+0-9a-zA-Z]*\).*/\1/&#x27; &lt;&lt; EOF | fdisk /dev/sda</span><br><span class="line">  o # clear the in memory partition table</span><br><span class="line">  n # new partition</span><br><span class="line">  p # primary partition</span><br><span class="line">    # partition number 1</span><br><span class="line">    # default - start at beginning of disk </span><br><span class="line">    # end of disk</span><br><span class="line">  w</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">mkfs.ext4 /dev/sda1</span><br><span class="line">mount /dev/sda1 /mnt</span><br><span class="line"></span><br><span class="line"># copy iso and modify, same as archlinux wiki</span><br><span class="line">cp -ax / /mnt</span><br><span class="line"></span><br><span class="line">cp -vaT /run/archiso/bootmnt/arch/boot/$(uname -m)/vmlinuz /mnt/boot/vmlinuz-linux</span><br><span class="line"></span><br><span class="line">arch-chroot /mnt /bin/bash</span><br><span class="line"></span><br><span class="line">sed -i &#x27;s/Storage=volatile/#Storage=auto/&#x27; /etc/systemd/journald.conf</span><br><span class="line"></span><br><span class="line">rm /etc/udev/rules.d/81-dhcpcd.rules</span><br><span class="line"></span><br><span class="line">systemctl disable pacman-init.service choose-mirror.service</span><br><span class="line">rm -r /etc/systemd/system/&#123;choose-mirror.service,pacman-init.service,etc-pacman.d-gnupg.mount,getty@tty1.service.d&#125;</span><br><span class="line">rm /etc/systemd/scripts/choose-mirror</span><br><span class="line"></span><br><span class="line">rm /etc/systemd/system/getty@tty1.service.d/autologin.conf</span><br><span class="line">rm /root/&#123;.automated_script.sh,.zlogin&#125;</span><br><span class="line">rm /etc/mkinitcpio-archiso.conf</span><br><span class="line">rm -r /etc/initcpio</span><br><span class="line"></span><br><span class="line">pacman-key --init</span><br><span class="line">pacman-key --populate archlinux</span><br><span class="line"></span><br><span class="line"># end of offline install</span><br><span class="line"></span><br><span class="line"># start configuration</span><br><span class="line">exit</span><br><span class="line">genfstab -U /mnt &gt;&gt; /mnt/etc/fstab</span><br><span class="line">arch-chroot /mnt /bin/bash</span><br><span class="line"></span><br><span class="line">ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class="line"></span><br><span class="line">sed -i -e &#x27;s/#en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/&#x27; /etc/locale.gen</span><br><span class="line">sed -i -e &#x27;s/#zh_CN.UTF-8 UTF-8/zh_CN.UTF-8 UTF-8/&#x27; /etc/locale.gen</span><br><span class="line">locale-gen</span><br><span class="line"></span><br><span class="line">echo &quot;LANG=en_US.UTF-8&quot; &gt;&gt; /etc/locale.conf</span><br><span class="line">echo &quot;myarch&quot; &gt; /etc/hostname</span><br><span class="line">echo &quot;127.0.0.1  localhost&quot; &gt;&gt; /etc/hosts</span><br><span class="line">echo &quot;::1 localhost&quot; &gt;&gt; /etc/hosts</span><br><span class="line">echo &quot;127.0.1.1 myarch.localdomain myarch&quot; &gt;&gt; /etc/hosts</span><br><span class="line"></span><br><span class="line">mkinitcpio -p linux</span><br><span class="line"></span><br><span class="line">echo &quot;root:toor&quot; | chpasswd</span><br><span class="line"></span><br><span class="line">grub-install --target=i386-pc /dev/sda</span><br><span class="line">grub-mkconfig -o /boot/grub/grub.cfg</span><br><span class="line"></span><br><span class="line">exit</span><br><span class="line"></span><br><span class="line">systemctl reboot</span><br></pre></td></tr></table></figure><p>重启后没有网</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dhcpcd</span><br><span class="line">ip link # up mode</span><br><span class="line">ip -4 addr # ipv4 addr</span><br></pre></td></tr></table></figure><p>重启后不能连接ssh</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start sshd</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ArchLinux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> archiso </tag>
            
            <tag> offline </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>latex排版工具生成pdf</title>
      <link href="/2019/08/26/latex/"/>
      <url>/2019/08/26/latex/</url>
      
        <content type="html"><![CDATA[<p>使用latex排版软件，方便的生成格式化的文档，比word的各种编辑方便很多</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S texlive-most texlive-lang</span><br></pre></td></tr></table></figure><p>tex的安装很大，<code>texlive-most</code>大约600m, <code>texlive-lang</code>大约300m</p><p>新建文本文件<code>test.tex</code>, ‘%’ is comment</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">\documentclass[UTF8]&#123;article&#125;</span><br><span class="line">% 这里是导言区</span><br><span class="line">\begin&#123;document&#125;</span><br><span class="line">Hello, world!</span><br><span class="line">\end&#123;document&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">latex test.tex     # generate test.dvi</span><br><span class="line">xdvi test.dvi      # open window to overview</span><br><span class="line">pdflatex test.tex  # generate test.pdf</span><br></pre></td></tr></table></figure><p><img src="/test.png" alt="latex预览"><br><code>test2.tex</code>, 试试中文支持</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">\documentclass&#123;article&#125;</span><br><span class="line"></span><br><span class="line">\usepackage&#123;fontspec&#125;</span><br><span class="line">\setmainfont[Ligatures=TeX]&#123;WenQuanYi Micro Hei Mono&#125;</span><br><span class="line"></span><br><span class="line">\title&#123;你好，world!&#125;</span><br><span class="line">\author&#123;Liam&#125;</span><br><span class="line">\date&#123;\today&#125;</span><br><span class="line">\begin&#123;document&#125;</span><br><span class="line">\maketitle</span><br><span class="line">\section&#123;你好中国&#125;</span><br><span class="line">中国在 East Asia.</span><br><span class="line">\subsection&#123;Hello Beijing&#125;</span><br><span class="line">北京是 capital of China.</span><br><span class="line">\subsubsection&#123;Hello Dongcheng District&#125;</span><br><span class="line">\paragraph&#123;Tian&#x27;anmen Square&#125;</span><br><span class="line">is in the center of Beijing</span><br><span class="line">\subparagraph&#123;Chairman Mao&#125;</span><br><span class="line">is in the center of 天安门广场。</span><br><span class="line">\subsection&#123;Hello 北京&#125;</span><br><span class="line">\paragraph&#123;北京&#125; is an international city。</span><br><span class="line">\end&#123;document&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xelatex test2.tex # test2.pdf</span><br></pre></td></tr></table></figure><p><img src="/test2.png" alt="latex预览"><br>注意使用中文字体，<code>fc-list</code></p><p>如果在<code>pdflatex</code>或<code>xelatex</code>过程出现错误，在<code>?</code>后面输入<code>x</code>然后回车退出</p>]]></content>
      
      
      <categories>
          
          <category> latex </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tex </tag>
            
            <tag> latex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用du显示文件夹大小</title>
      <link href="/2019/08/16/du-foldersize/"/>
      <url>/2019/08/16/du-foldersize/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">du -sh /path/to/folder</span><br></pre></td></tr></table></figure><p>显示多个文件夹大小，最后一行显示这些文件夹总大小</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">du -csh folder1  folder2 folder3</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux命令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> du </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis经验</title>
      <link href="/2019/08/15/redis/"/>
      <url>/2019/08/15/redis/</url>
      
        <content type="html"><![CDATA[<p>显示\xe5\xb7\x9d的中文</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli --raw</span><br></pre></td></tr></table></figure><p>字符串使用单引号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LPUSH carQueueByList &#x27;&#123;&quot;num&quot;:&quot;一号&quot;,&quot;timestamp&quot;:1559792585000&#125;&#x27;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>获取tar压缩包tarball的根目录文件名</title>
      <link href="/2019/08/15/tarball-rootdirectory/"/>
      <url>/2019/08/15/tarball-rootdirectory/</url>
      
        <content type="html"><![CDATA[<p>使用下面命令可以得到tar压缩包解压后的根目录文件名<br>tar 会自动根据文件后缀选择解压算法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar tf  /mnt/lfs/sources/m4-1.4.18.tar.xz | sed -e &#x27;s@/.*@@&#x27; | uniq</span><br><span class="line">m4-1.4.18</span><br></pre></td></tr></table></figure><p>z for tar.gz,gzip</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar tzf nginx-1.0.0.tar.gz</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux命令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sed </tag>
            
            <tag> tar </tag>
            
            <tag> uniq </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>find查找是不要显示&quot;Permission denied&quot;</title>
      <link href="/2019/08/15/find-denied/"/>
      <url>/2019/08/15/find-denied/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -name art  2&gt;&amp;1 | grep -v &quot;Permission denied&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux命令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> find </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux 方便看日志-具体行查看</title>
      <link href="/2019/08/14/view-log/"/>
      <url>/2019/08/14/view-log/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">grep -E &quot;a|b&quot;  # 查找多个，or</span><br><span class="line">grep -E &quot;a.*b&quot; # 多个，and</span><br><span class="line">cat my.log |grep -n &quot;error&quot;  # 显示行号</span><br><span class="line">sed -n &#x27;425,435p&#x27; my.log  # 425-435行</span><br><span class="line">tail -n +425 my.log | head -n 11  #从425(含)行往下11行</span><br><span class="line">sed -n &#x27;435p&#x27; my.log  # 435行</span><br><span class="line">tail -200 my.log  # 末尾200行</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux命令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> grep </tag>
            
            <tag> sed </tag>
            
            <tag> tail </tag>
            
            <tag> head </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>heredoc使用cat写入大段内容到文件,脚本生成配置文件</title>
      <link href="/2019/08/13/cat-heredoc/"/>
      <url>/2019/08/13/cat-heredoc/</url>
      
        <content type="html"><![CDATA[<p>使用heredocument可以写入大段内容到文件，比如在一个脚本里，生成多个脚本，配置文件等等</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF &gt;testd.sh</span><br><span class="line">#!/bin/bash</span><br><span class="line">ls -al</span><br><span class="line">time ls -al</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>EOF只是一个标记，但是一般就用这个避免与内容混淆</p>]]></content>
      
      
      <categories>
          
          <category> linux命令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux命令 </tag>
            
            <tag> cat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vim的w时没有权限怎么sudo保存</title>
      <link href="/2019/08/13/vim-w-sudo/"/>
      <url>/2019/08/13/vim-w-sudo/</url>
      
        <content type="html"><![CDATA[<p>用vi或vim编辑文件，当要w保存时提示文件只读，没有权限，可以使用下面的命令来sudo保存文件，不然改了很多，从头再改很累</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:w !sudo tee %</span><br></pre></td></tr></table></figure><p>w 会把文件内容管道输入给 tee</p><p>% 是当前文件名</p>]]></content>
      
      
      <categories>
          
          <category> linux命令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux命令 </tag>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>i3窗口管理器的简单使用-快捷键</title>
      <link href="/2019/08/13/i3wm-common/"/>
      <url>/2019/08/13/i3wm-common/</url>
      
        <content type="html"><![CDATA[<p><a href="https://i3wm.org/docs/userguide.html">i3 User’s Guide</a> 看看（Default keybindings）熟悉快捷键与常用操作</p><p>很长，可能需要一点点耐心看</p><p>下面是一些简单的，对于刚安装玩i3窗口管理器的人用，i3也显示和使用鼠标，不像vim，不要怕</p><p><code>$mod</code> 主功能键，一般是win，或者alt</p><p><code>$mod + enter</code> 打开终端</p><p><code>$mod + shift + e</code>  退出 i3,exit</p><p><code>$mod + shift + space</code> 浮动窗口，就和平时用的桌面窗口一样了，可以自由拖动</p><p><code>$mod + shift + q</code>  关闭当前程序窗口，因为窗口没有x关闭按钮，有的有file–close菜单,quit</p><p><code>$mod + f</code>  全屏，再按返回,full</p><p><code>$mod + 3</code> 切换到3号桌面，1-0 共10个桌面</p><p><code>$mod + shift +3</code> 移动当前窗口到3号桌面</p><p>这些玩玩，是不是觉得有意思了</p><p><code>$mod + w</code> 桌面的窗口以tab方式切换，像网页的多个tab页适合多个终端，可以鼠标点击tab切换，<code>$mod + e</code> 回到开始的分开排列</p><p><code>$mod + shift + j</code> 当前窗口左移， j k l ; 对应 左下上右</p><p>其他的操作，喜欢了，还是慢慢看文档比较全面</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>virtualbox在开机后的uefi shell启动进入系统</title>
      <link href="/2019/08/13/vbox-efi/"/>
      <url>/2019/08/13/vbox-efi/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">map # pring all disk</span><br><span class="line">virtualbox 启动进入uefi shell</span><br><span class="line">fs0:\efi\archlinux\grubx64.efi</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> virtualbox </category>
          
      </categories>
      
      
        <tags>
            
            <tag> efi </tag>
            
            <tag> virtualbox </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sfdisk可以方便备份与恢复分区表</title>
      <link href="/2019/08/13/sfdisk/"/>
      <url>/2019/08/13/sfdisk/</url>
      
        <content type="html"><![CDATA[<p>硬盘的分区表有时候很容易丢失，一般在硬盘开始扇区，分区表丢失后，lsblk就只能看到一块没有分区的硬盘，所以分好区后，备份分区表，比备份系统更重要</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lsblk  # print all disk and partition</span><br><span class="line">sfdisk -d /dev/sda &gt; sda.dump   # Backup partition table</span><br><span class="line">sfdisk /dev/sda &lt; sda.dump      # restore partition table</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux命令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux命令 </tag>
            
            <tag> sfdisk </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>fdisk 完全命令行执行分区</title>
      <link href="/2019/08/13/fdisk-shell/"/>
      <url>/2019/08/13/fdisk-shell/</url>
      
        <content type="html"><![CDATA[<p>fdisk交互式，命令行分区工具，有时候需要完全在脚本里自动执行分区，可以用下面的脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sed -e &#x27;s/\s*\([\+0-9a-zA-Z]*\).*/\1/&#x27; &lt;&lt; EOF | fdisk /dev/sdals</span><br><span class="line">  o # clear the in memory partition table</span><br><span class="line">  n # new partition</span><br><span class="line">  p # primary partition</span><br><span class="line">  1 # partition number 1</span><br><span class="line">    # default - start at beginning of disk </span><br><span class="line">    #</span><br><span class="line">  w</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>就是模拟交互式，输入命令给fdisk，一个空行就是回车，使用默认选项，分区大小在输入结束分区的扇区数时，可以使用数字如 +200M 就是这个分区200m，或者 G，有提示的</p><p>或者看看 sfdisk 从分区表恢复分区</p>]]></content>
      
      
      <categories>
          
          <category> linux命令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux命令 </tag>
            
            <tag> fdisk </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wpa_supplicant连接无线</title>
      <link href="/2019/08/13/archlinux-wifi/"/>
      <url>/2019/08/13/archlinux-wifi/</url>
      
        <content type="html"><![CDATA[<p>命令行连接已知ssid无线名称与密码的wifi无线网络</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 连接 名为mywifi，密码为123456789的无线网络</span><br><span class="line">wpa_passphrase &quot;mywifi&quot; &quot;123456789&quot; &gt;wpa.conf</span><br><span class="line">wpa_supplicant -i wlp3s0 -c wpa.conf  &amp;</span><br><span class="line">dhcpcd wlp3s0  #启动dhcp分配ip，ip link 或者 ip addr查看ip与网卡名</span><br><span class="line">ping www.baidu.com</span><br><span class="line"></span><br><span class="line">ip -4 addr   # ip4 地址</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux命令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux命令 </tag>
            
            <tag> wpa_supplicant </tag>
            
            <tag> wifi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>archlinux与Windows的双系统启动 efi与mbr</title>
      <link href="/2019/08/13/archlinux-dualboot/"/>
      <url>/2019/08/13/archlinux-dualboot/</url>
      
        <content type="html"><![CDATA[<p>一般安装windows与linux的双系统是建议先安装windows，然后安装linux。先安装linux也是可以的，只是怕安装windows过程中，windows可能会自动覆盖一些分区。</p><p>mbr引导方式，grub2,添加双系统启动项</p><p>安装玩linux后，安装完grub并生成配置后</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">vim /boot/grub/grub.cfg 最下面加，XXXXXX是lsblk-fs的windows分区的uuid</span><br><span class="line"></span><br><span class="line">if [ &quot;$&#123;grub_platform&#125;&quot; == &quot;pc&quot; ]; then</span><br><span class="line">menuentry &quot;Microsoft Windows Vista/7/8/8.1/10 BIOS/MBR&quot; &#123;</span><br><span class="line">insmod part_msdos</span><br><span class="line">insmod ntfs</span><br><span class="line">insmod ntldr     </span><br><span class="line">search --no-floppy --fs-uuid --set=root --hint-bios=hd0,msdos1 --hint-efi=hd0,msdos1 --hint-baremetal=ahci0,msdos1 XXXXXXXXXXXXXXXX</span><br><span class="line">ntldr /bootmgr</span><br><span class="line">&#125;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>efi引导方式，grub2,添加双系统启动项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">pacman -S grub efibootmgr dosfstools os-prober mtools</span><br><span class="line"></span><br><span class="line"># esp分区挂载在/boot</span><br><span class="line">grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUB --recheck</span><br><span class="line">os-prober  ;find Windows Boot Manager:Windows:efi</span><br><span class="line">grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure><p>启动目录结构</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/boot/</span><br><span class="line">├── grub</span><br><span class="line">├── EFI</span><br><span class="line">│   ├── Boot</span><br><span class="line">│   ├── GRUB        # 安装的efi grub引导</span><br><span class="line">│   ├── MicroSoft   # microsoft/boot/bootmgrfw.efi，EFI下的才能被os-prober识别</span><br></pre></td></tr></table></figure><p>efi启动机制：bios找到gpt磁盘，fat32分区，如果有EFI目录则为esp启动分区，列出EFI下的efi引导项，然后启动，比mbr的基于硬盘扇区字节的更直观方便</p>]]></content>
      
      
      <categories>
          
          <category> ArchLinux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ArchLinux </tag>
            
            <tag> 双系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速重新执行需要sudo的命令</title>
      <link href="/2019/08/13/alias-sudo-to-please/"/>
      <url>/2019/08/13/alias-sudo-to-please/</url>
      
        <content type="html"><![CDATA[<p>重试上次需要权限的命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alias please=&#x27;sudo $(fc -ln -1)&#x27;</span><br></pre></td></tr></table></figure><pre><code>[myarch ~]$ ls /root/ls: cannot open directory &#39;/root/&#39;: Permission denied[myarch ~]$ plese</code></pre>]]></content>
      
      
      <categories>
          
          <category> linux命令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux命令 </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>screenfetch或neofetch 终端显示系统仪表盘信息</title>
      <link href="/2019/08/09/screenfetch/"/>
      <url>/2019/08/09/screenfetch/</url>
      
        <content type="html"><![CDATA[<ul><li>在终端显示系统信息的 <code>screenfetch</code> <code>neofetch</code><br><img src="/neofetch.png" alt="neofetch"></li></ul>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> screenfetch </tag>
            
            <tag> neofetch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>i3是最精简的窗口管理器没有之一</title>
      <link href="/2019/08/09/i3-wm/"/>
      <url>/2019/08/09/i3-wm/</url>
      
        <content type="html"><![CDATA[<p><a href="https://wiki.archlinux.org/index.php/I3">archlinux-i3</a></p><p>i3是没有窗口重叠的，窗口管理器，窗口可以最大，最小，全屏，但是都是连在一起的，不像一般的层叠窗口，类似vim的多窗口模式，有鼠标，可以打开浏览器，但是窗口模式与我们场景的不一样</p><p><img src="/i3-wm.png" alt="i3-wm"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S i3-wm i3status</span><br></pre></td></tr></table></figure><p>启动到黑屏终端</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">startx /usr/bin/i3</span><br></pre></td></tr></table></figure><p>不会用的话，就会不会操作了，推荐先 <code>startx</code> 启动xterm，再 <code>i3</code> 启动i3窗口管理器</p><p>win + enter 或者alt + enter 打开终端</p><p>可以在终端中通过命令启动浏览器等等</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">启动谷歌浏览器</span><br><span class="line">google-chrome-stable</span><br></pre></td></tr></table></figure><p><a href="https://i3wm.org/docs/userguide.html">i3 User’s Guide</a> 看看（Default keybindings）熟悉快捷键与常用操作</p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> i3 </tag>
            
            <tag> wm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>只启动x-server深入linux图形架构 后启动我们自己的小窗口</title>
      <link href="/2019/08/09/xorg-only/"/>
      <url>/2019/08/09/xorg-only/</url>
      
        <content type="html"><![CDATA[<p>只启动xorg-server,显示我们自己写的程序<a href="https://qianggetaba.com/2019/08/09/xorg-server-newbie/">xorg-server的c语言入门</a>的窗口</p><p><a href="https://www.x.org/archive/X11R6.7.0/doc/xinit.1.html">man xinit</a></p><p><code>startx</code> 是 <code>xinit</code> 的包装，xinit默认会启动xterm，一个窗口化的终端，方便那些不能直接在kernel启动init的时候，启动桌面，就先启动xterm，再启动桌面</p><p>安装xterm</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S xterm</span><br><span class="line">xterm  #确保能启动</span><br></pre></td></tr></table></figure><p>回到系统启动后的黑屏终端</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">xinit  #会报错，可能缺少一些环境变量</span><br><span class="line">startx  会启动几个xterm与鼠标，图像窗口程序</span><br><span class="line"></span><br><span class="line">./xorg  # 在其中一个xterm，运行我们编译的xlib写的简单窗口</span><br></pre></td></tr></table></figure><p>可以看到程序启动，左上角有个小窗口，黑色背景，上面有条白色线</p><p>startx 会设置一些环境变量，启动xinit，启动xorg-server，启动xterm<br>我们就可以在xterm上启动我们的xlib程序了，但是由于没有窗口管理器，窗口不能移动，最大最小化</p><p>由此，可以看出，linux的图像架构，一般是启动xserver，xserver找到一个图像程序<br>一般是窗口管理器，然后这个程序启动桌面环境，就是我们看到的桌面了</p><p>如果xserver找不到一个图形程序，或者运行的那个图形程序退出了，xserver也会退出</p>]]></content>
      
      
      <categories>
          
          <category> xorg </category>
          
      </categories>
      
      
        <tags>
            
            <tag> xorg </tag>
            
            <tag> xorg-server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>conky华丽桌面显示系统仪表盘</title>
      <link href="/2019/08/09/conky/"/>
      <url>/2019/08/09/conky/</url>
      
        <content type="html"><![CDATA[<p>conky是在桌面可以显示系统信息的仪表盘，cpu，内存网络，磁盘等等，配置好了，很好看</p><p><img src="/conky.png" alt="conky"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S conky conky-manager</span><br></pre></td></tr></table></figure><p>after conky 1.10, use lua syntax</p><p>我的配置，<code>～/.config/conky/conky.conf</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">conky.config = &#123;</span><br><span class="line">    alignment = &#x27;top_right&#x27;,</span><br><span class="line">    </span><br><span class="line">    background = false,</span><br><span class="line">    </span><br><span class="line">    border_width = 1,</span><br><span class="line">    </span><br><span class="line">    cpu_avg_samples = 2,</span><br><span class="line">    net_avg_samples = 2,</span><br><span class="line">    </span><br><span class="line">    use_xft = true,</span><br><span class="line">    -- Xft font when Xft is enabled</span><br><span class="line">    font = &#x27;Sans:size=9&#x27;,</span><br><span class="line">    -- Text alpha when using Xft</span><br><span class="line">    xftalpha = 0.8,</span><br><span class="line"></span><br><span class="line">    default_color = &#x27;white&#x27;,</span><br><span class="line">    default_outline_color = &#x27;white&#x27;,</span><br><span class="line">    default_shade_color = &#x27;white&#x27;,</span><br><span class="line">    </span><br><span class="line">    draw_borders = false,</span><br><span class="line">    draw_graph_borders = true,</span><br><span class="line">    draw_outline = false,</span><br><span class="line">    draw_shades = false,</span><br><span class="line"></span><br><span class="line">    gap_x = 5,</span><br><span class="line">    gap_y = 31,</span><br><span class="line">    minimum_height = 5,</span><br><span class="line">    minimum_width = 5,</span><br><span class="line"></span><br><span class="line">    no_buffers = true,</span><br><span class="line">    out_to_console = false,</span><br><span class="line">    out_to_stderr = false,</span><br><span class="line">    extra_newline = false,</span><br><span class="line"></span><br><span class="line">    double_buffer = true,</span><br><span class="line">    -- Create own window instead of using desktop (required in nautilus)</span><br><span class="line">    own_window = true,</span><br><span class="line">    own_window_class = &#x27;Conky&#x27;,</span><br><span class="line">    own_window_argb_visual = true,</span><br><span class="line">    own_window_transparent = true,</span><br><span class="line">    own_window_hints = &#x27;undecorated,below,sticky,skip_taskbar,skip_pager&#x27;,</span><br><span class="line">    own_window_type = &#x27;desktop&#x27;,</span><br><span class="line"></span><br><span class="line">    stippled_borders = 0,</span><br><span class="line">    update_interval = 1.0,</span><br><span class="line">    uppercase = false,</span><br><span class="line">    use_spacer = &#x27;none&#x27;,</span><br><span class="line">    show_graph_scale = false,</span><br><span class="line">    show_graph_range = false</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">conky.text = [[</span><br><span class="line">$&#123;alignc&#125;$&#123;color4&#125;$&#123;time %a&#125; $&#123;time %b&#125; $&#123;time %e&#125;     $&#123;alignc&#125;$&#123;color1&#125;$&#123;time %H&#125;:$&#123;color2&#125;$&#123;time %M&#125;:$&#123;color3&#125;$&#123;time %S&#125;</span><br><span class="line">$&#123;color white&#125;SYSTEM $&#123;hr 1&#125;$&#123;color&#125;</span><br><span class="line">Hostname: $alignr$nodename</span><br><span class="line">Kernel: $alignr$kernel</span><br><span class="line">Uptime: $alignr$uptime</span><br><span class="line"></span><br><span class="line">CPU: $&#123;alignr&#125;$&#123;freq dyn&#125; MHz</span><br><span class="line">Processes: $&#123;alignr&#125;$processes ($running_processes running)</span><br><span class="line">Load: $&#123;alignr&#125;$loadavg</span><br><span class="line"></span><br><span class="line">CPU $&#123;alignr&#125;$&#123;cpu cpu0&#125;%</span><br><span class="line">$&#123;cpubar 4 cpu0&#125;</span><br><span class="line">Ram $&#123;alignr&#125;$mem / $memmax ($memperc%)</span><br><span class="line">$&#123;membar 4&#125;</span><br><span class="line">swap $&#123;alignr&#125;$swap / $swapmax ($swapperc%)</span><br><span class="line">$&#123;swapbar 4&#125;</span><br><span class="line"></span><br><span class="line">Highest CPU $alignr CPU%  MEM%</span><br><span class="line">$&#123;top name 1&#125;$alignr$&#123;top cpu 1&#125;   $&#123;top mem 1&#125;</span><br><span class="line">$&#123;top name 2&#125;$alignr$&#123;top cpu 2&#125;   $&#123;top mem 2&#125;</span><br><span class="line">$&#123;top name 3&#125;$alignr$&#123;top cpu 3&#125;   $&#123;top mem 3&#125;</span><br><span class="line"></span><br><span class="line">Highest MEM $alignr CPU%  MEM%</span><br><span class="line">$&#123;top_mem name 1&#125;$alignr$&#123;top_mem cpu 1&#125;   $&#123;top_mem mem 1&#125;</span><br><span class="line">$&#123;top_mem name 2&#125;$alignr$&#123;top_mem cpu 2&#125;   $&#123;top_mem mem 2&#125;</span><br><span class="line">$&#123;top_mem name 3&#125;$alignr$&#123;top_mem cpu 3&#125;   $&#123;top_mem mem 3&#125;</span><br><span class="line"></span><br><span class="line">$&#123;color white&#125;NETWORK $&#123;hr 1&#125;$&#123;color&#125;</span><br><span class="line">Down $&#123;downspeed wlan0&#125;/s $&#123;alignr&#125;Up $&#123;upspeed wlan0&#125;/s</span><br><span class="line">$&#123;downspeedgraph wlan0 25,107&#125; $&#123;alignr&#125;$&#123;upspeedgraph wlan0 25,107&#125;</span><br><span class="line">Total $&#123;totaldown wlan0&#125; $&#123;alignr&#125;Total $&#123;totalup wlan0&#125;</span><br><span class="line"></span><br><span class="line">$&#123;color white&#125;DISKIO $&#123;hr 1&#125;$&#123;color&#125;</span><br><span class="line">Read $&#123;diskio_read&#125;/s $&#123;alignr&#125;Write $&#123;diskio_write&#125;/s</span><br><span class="line">$&#123;diskiograph_read /dev/sda 25,107&#125; $&#123;alignr&#125;$&#123;diskiograph_read /dev/sda 25,107&#125;</span><br><span class="line">]]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> conky </tag>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xorg-server的c语言入门</title>
      <link href="/2019/08/09/xorg-server-newbie/"/>
      <url>/2019/08/09/xorg-server-newbie/</url>
      
        <content type="html"><![CDATA[<p>xorg官网<a href="https://www.x.org/releases/X11R7.7/doc/libX11/libX11/libX11.html#Introduction_to_Xlib">Xlib - C Language X Interface</a></p><p>初级教程<a href="https://tronche.com/gui/x/xlib-tutorial/">Xlib programming: a short tutorial</a></p><p>linux的桌面图形架构图，使用client与server模式，server使用x11（X Window System protocol）协议，client通过x11协议告诉server怎么显示，显示什么，就像http协议，xlib是封装协议的c库，使用xlib可以方便与xserver建立连接，显示图像，不用关注协议具体的字节格式等等</p><p><img src="/xorg-server.png" alt="xorg-server"></p><p>xlib是对x11显示服务协议的封装</p><p>x11定义了客户端到服务器端的显示模式</p><p>下面的小例子，演示怎么使用xlib库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">测试库文件，有桌面环境的应该都有</span><br><span class="line">sudo find / -name Xlib.h</span><br><span class="line">sudo find / -name libX11.so</span><br></pre></td></tr></table></figure><p><a href="https://tronche.com/gui/x/xlib-tutorial/prog-2.cc">prog-2.cc</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">// Written by Ch. Tronche (http://tronche.lri.fr:8000/)</span><br><span class="line">// Copyright by the author. This is unmaintained, no-warranty free software. </span><br><span class="line">// Please use freely. It is appreciated (but by no means mandatory) to</span><br><span class="line">// acknowledge the author&#x27;s contribution. Thank you.</span><br><span class="line">// Started on Thu Jun 26 23:29:03 1997</span><br><span class="line"></span><br><span class="line">//</span><br><span class="line">// Xlib tutorial: 2nd program</span><br><span class="line">// Make a window appear on the screen and draw a line inside.</span><br><span class="line">// If you don&#x27;t understand this program, go to</span><br><span class="line">// http://tronche.lri.fr:8000/gui/x/xlib-tutorial/2nd-program-anatomy.html</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line">#include &lt;X11/Xlib.h&gt; // Every Xlib program must include this</span><br><span class="line">#include &lt;assert.h&gt;   // I include this to test return values the lazy way</span><br><span class="line">#include &lt;unistd.h&gt;   // So we got the profile for 10 seconds</span><br><span class="line"></span><br><span class="line">#define NIL (0)       // A name for the void pointer</span><br><span class="line"></span><br><span class="line">main()</span><br><span class="line">&#123;</span><br><span class="line">      // Open the display</span><br><span class="line"></span><br><span class="line">      Display *dpy = XOpenDisplay(NIL);</span><br><span class="line">      assert(dpy);</span><br><span class="line"></span><br><span class="line">      // Get some colors</span><br><span class="line"></span><br><span class="line">      int blackColor = BlackPixel(dpy, DefaultScreen(dpy));</span><br><span class="line">      int whiteColor = WhitePixel(dpy, DefaultScreen(dpy));</span><br><span class="line"></span><br><span class="line">      // Create the window</span><br><span class="line"></span><br><span class="line">      Window w = XCreateSimpleWindow(dpy, DefaultRootWindow(dpy), 0, 0, </span><br><span class="line">     200, 100, 0, blackColor, blackColor);</span><br><span class="line"></span><br><span class="line">      // We want to get MapNotify events</span><br><span class="line"></span><br><span class="line">      XSelectInput(dpy, w, StructureNotifyMask);</span><br><span class="line"></span><br><span class="line">      // &quot;Map&quot; the window (that is, make it appear on the screen)</span><br><span class="line"></span><br><span class="line">      XMapWindow(dpy, w);</span><br><span class="line"></span><br><span class="line">      // Create a &quot;Graphics Context&quot;</span><br><span class="line"></span><br><span class="line">      GC gc = XCreateGC(dpy, w, 0, NIL);</span><br><span class="line"></span><br><span class="line">      // Tell the GC we draw using the white color</span><br><span class="line"></span><br><span class="line">      XSetForeground(dpy, gc, whiteColor);</span><br><span class="line"></span><br><span class="line">      // Wait for the MapNotify event</span><br><span class="line"></span><br><span class="line">      for(;;) &#123;</span><br><span class="line">    XEvent e;</span><br><span class="line">    XNextEvent(dpy, &amp;e);</span><br><span class="line">    if (e.type == MapNotify)</span><br><span class="line">  break;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      // Draw the line</span><br><span class="line">      </span><br><span class="line">      XDrawLine(dpy, w, gc, 10, 60, 180, 20);</span><br><span class="line"></span><br><span class="line">      // Send the &quot;DrawLine&quot; request to the server</span><br><span class="line"></span><br><span class="line">      XFlush(dpy);</span><br><span class="line"></span><br><span class="line">      // Wait for 10 seconds</span><br><span class="line"></span><br><span class="line">      sleep(10);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gcc -L /usr/lib/ -lX11 -o xorg prog-2.cc</span><br><span class="line">./xorg</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>桌面出现一个小黑窗口，上面一条白线，10s后关闭，只关闭窗口程序没结束</p><p>但是不能直接在启动桌面前的黑屏终端运行,因为没有启动 x server</p>]]></content>
      
      
      <categories>
          
          <category> xorg </category>
          
      </categories>
      
      
        <tags>
            
            <tag> xorg </tag>
            
            <tag> xorg-server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>archlinux的用户自建的包安装Aur</title>
      <link href="/2019/08/05/archlinux-aur/"/>
      <url>/2019/08/05/archlinux-aur/</url>
      
        <content type="html"><![CDATA[<p>Arch User Repository (Aur),就是用户创建上传的包，里面是构建包的一个脚本文件<code>PKGBUILD</code>，当这个包比较受欢迎，就会进入community库的里面</p><p>下面是怎么安装aur的包，比如 <a href="https://aur.archlinux.org/packages/jdk8/">https://aur.archlinux.org/packages/jdk8/</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 前提，已安装base-devel，一般在安装系统时，与base一起安装</span><br><span class="line">pacman -S base-devel</span><br><span class="line"></span><br><span class="line"># 下载里面的git库地址，也有打包下载的，右侧Download snapshot</span><br><span class="line">git clone https://aur.archlinux.org/jdk8.git</span><br><span class="line"></span><br><span class="line">cd jdk8</span><br><span class="line"></span><br><span class="line"># 开始下载依赖等等，安装，就好了</span><br><span class="line">makepkg -si</span><br></pre></td></tr></table></figure><p>由于是用户上传的包，不一定都好用，心里准备，但有的软件核心库没有，自己下载需要很多配置，就可以试试aur</p>]]></content>
      
      
      <categories>
          
          <category> ArchLinux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Aur </tag>
            
            <tag> Package </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>archlinux系统中的一些常识或常用记录</title>
      <link href="/2019/08/05/archlinux-common/"/>
      <url>/2019/08/05/archlinux-common/</url>
      
        <content type="html"><![CDATA[<h1 id="arch系统中的一些常规记录，常用路径，常用命令等等"><a href="#arch系统中的一些常规记录，常用路径，常用命令等等" class="headerlink" title="arch系统中的一些常规记录，常用路径，常用命令等等"></a>arch系统中的一些常规记录，常用路径，常用命令等等</h1><ul><li><p>更新包db <code>pacman -Sy</code></p></li><li><p>安装软件 <code>pacman -S name</code></p></li><li><p>安装已下载包 <code>pacman -U name.pkg.tar.xz</code></p></li><li><p>pacman下载的包路径 <code>/var/cache/pacman/pkg</code></p></li><li><p>桌面的应用路径，就是点击Activity或者按win按键出来的应用<br/><br>也叫<a href="https://wiki.archlinux.org/index.php/desktop_entries">Desktop entries</a><br/><br>图标显示不正常或者没有可以看看 <code>/usr/share/applications/</code></p></li><li><p>上面图标文件.desktop中的Icon默认路径,一般是48x48的png <code>/usr/share/pixmaps/</code></p></li><li><p>chrome的apps在 <code>~/.local/share/applications/chrome-fhbjgbiflinjbdggehcddcbncdddomop-Default.desktop</code></p></li><li><p>pacman下载的镜像地址设置 <code>/etc/pacman.d/mirrorlist</code></p></li><li><p>archlinuxcn源 <code>/etc/pacman.conf</code></p></li></ul><p>gnome桌面环境内,一些常用应用的【程序名称】，方便shell或配置等等调用<br/></p><ul><li><p>显示所有应用列表 <code>win + a</code></p></li><li><p>模拟终端，就是点击打开的终端 <code>gnome-terminal</code></p></li><li><p>应用中Files来文件管理器,文件管理器的左侧下面的other location可以方便的房屋ftp,sftp等等，ssh隧道，很好用 <code>nautilus</code></p></li><li><p>Files中 ,快速显示隐藏文件，就是以点开头的配置 <code>ctrl + h</code></p></li><li><p>应用中的Screenshot <code>gnome-screenshot</code><br/></p></li><li><p>在设置中可以加入系统快捷键，实现类似qq的ctrl + alt +a 截图 <code>gnome-screenshot -a</code></p></li><li><p>查询包信息 <code>pacman -Si xorg-server</code><br/></p></li><li><p>查询包组信息, 就是是一组相互联系的包 <code>pacman -Sg xorg</code><br/></p></li><li><p>查询包依赖 <code>pacman -Si xorg-server|sed -n &#39;/Depends\ On/,/:/p&#39;|sed &#39;$d&#39;|cut -d: -f2</code></p></li><li><p>pacman使用的包的db是个压缩包 <code>*.db.tar.gz</code><br/></p></li><li><p>可以自己解压看看 <code>file /var/lib/pacman/sync/core.db</code></p></li><li><p>使用rufus写arch的iso到U盘选mbr方式以iso方式写入<br/></p></li><li><p>可以放脚本或文件到U盘根目录，启动后访问 <code>/run/archiso/bootmnt</code></p></li><li><p>就是挂载路径，但是【只读】<br/></p></li><li><p>这样制成的U盘直接也可以在efi下引导</p></li><li><p>修改gnome锁屏背景,没有修改的设置，只能这样重新打包主题文件<br/> <a href="https://wiki.archlinux.org/index.php/GDM#Log-in_screen_background_image">https://wiki.archlinux.org/index.php/GDM#Log-in_screen_background_image</a></p></li></ul><p>把常用的命令放入 <code>/usr/local/bin/</code>,方便输入时，提示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOT | sudo tee /usr/local/bin/navicat | sudo chmod +x /usr/local/bin/navicat</span><br><span class="line">#!/bin/bash</span><br><span class="line">～/navicat121_premium_en_x64/start_navicat</span><br><span class="line">EOT</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ArchLinux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ArchLinux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>archlinux的autostart开机启动脚本</title>
      <link href="/2019/08/05/archlinux-autostart/"/>
      <url>/2019/08/05/archlinux-autostart/</url>
      
        <content type="html"><![CDATA[<p>在进入gnome桌面环境时，需要自动启动一些脚本，现在arch使用systemd，以前的自启动方式不能用</p><p>把以下内容存为init.desktop，放入～&#x2F;.config&#x2F;autostart&#x2F;目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[Desktop Entry]</span><br><span class="line">Name=Ainit</span><br><span class="line">GenericName=Input Method</span><br><span class="line">Exec=/home/qianggetaba/init.sh</span><br><span class="line">Terminal=false</span><br><span class="line">Type=Application</span><br><span class="line">StartupNotify=false</span><br><span class="line">NoDisplay=true</span><br><span class="line">X-GNOME-Autostart-Phase=Applications</span><br><span class="line">X-GNOME-AutoRestart=false</span><br><span class="line">X-GNOME-Autostart-Notify=false</span><br></pre></td></tr></table></figure><p>上面的Exec，改为启动脚本【绝对】路径</p>]]></content>
      
      
      <categories>
          
          <category> ArchLinux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> autostart </tag>
            
            <tag> gnome#autostart </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>archlinux安装桌面环境系统，好好玩耍</title>
      <link href="/2019/08/05/archlinux-desktop/"/>
      <url>/2019/08/05/archlinux-desktop/</url>
      
        <content type="html"><![CDATA[<p>在简单的从iso或者usb安装完成arch后，只有终端命令行，这样是简单方便，也可以安装桌面环境，不再是黑黑的命令</p><p>以下是安装gnome桌面环境，等熟悉了，自己可以安装其他桌面环境尝鲜，gnome是主流桌面环境， gnome是Ubuntu默认的桌面环境，想来应该还是不错的，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">pacman -Sy</span><br><span class="line"># wqy-microhei是chrome中文乱码</span><br><span class="line">pacman -S xorg xorg-server gnome ttf-droid wqy-microhei</span><br><span class="line"></span><br><span class="line"># 安装的包很多，需要耐心慢慢装</span><br><span class="line"></span><br><span class="line"># 添加非root用户，root也可以登录桌面，但是一般推荐不是root用户登录桌面</span><br><span class="line">useradd -m -g users -s /bin/bash qianggetaba</span><br><span class="line">passwd qianggetaba</span><br><span class="line">vi /etc/sudoers #root ALL=(ALL) ALL 下面加 qianggetaba ALL=(ALL) ALL  添加sudo执行命令权限</span><br><span class="line"></span><br><span class="line">systemctl enable sshd</span><br><span class="line">systemctl enable NetworkManager</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="https://wiki.archlinux.org/index.php/Xorg#Driver_installation">Driver installation</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># 显卡驱动选择</span><br><span class="line">lspci | grep -e VGA -e 3D       #查看显卡</span><br><span class="line">pacman -S xf86-video-intel      #intel video driver</span><br><span class="line">pacman -S xf86-video-amdgpu     #amd video driver</span><br><span class="line">pacman -S xf86-video-nouveau# nvidia</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br><span class="line"></span><br><span class="line"># 重启后还是进入命令行，是为了保险起见，因为不知道桌面环境是否能正常启动，执行下面命令，启动桌面</span><br><span class="line">systemctl start gdm</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ArchLinux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 桌面环境 </tag>
            
            <tag> gnome </tag>
            
            <tag> gdm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>arch安装sogou搜狗输入法</title>
      <link href="/2019/08/05/archlinux-sogou/"/>
      <url>/2019/08/05/archlinux-sogou/</url>
      
        <content type="html"><![CDATA[<p>很多时候觉得linux难用，一是没有好用的中文输入法，二是没有熟悉的办公软件（office全家桶），三是没有qq微信（腾讯以前有过，用的人少就停了，现在wine的不好用，只能在xp虚拟机（内存占用少）使用），四是没有好玩的大型网络游戏</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">#sogoupinyin</span><br><span class="line"></span><br><span class="line"># 确保package的mirror地址</span><br><span class="line">sudo vim /etc/pacman.d/mirrorlist</span><br><span class="line">Server = http://mirrors.163.com/archlinux/$repo/os/$arch </span><br><span class="line">sudo vim /etc/pacman.conf</span><br><span class="line">[archlinuxcn]</span><br><span class="line">Server = https://cdn.repo.archlinuxcn.org/$arch</span><br><span class="line"></span><br><span class="line"># 下载输入法与依赖</span><br><span class="line">sudo pacman -Sy</span><br><span class="line">sudo pacman -S archlinuxcn-keyring</span><br><span class="line">sudo pacman -S fcitx-im fcitx-configtool fcitx-gtk2 fcitx-gtk3 fcitx-qt4 fcitx-qt5 libidn fcitx-sogoupinyin fcitx-googlepinyin</span><br><span class="line"></span><br><span class="line"># 配置</span><br><span class="line">mkdir ~/.config/autostart</span><br><span class="line">cp /etc/xdg/autostart/fcitx-autostart.desktop ~/.config/autostart/</span><br><span class="line">  </span><br><span class="line">echo &quot;GTK_IM_MODULE=fcitx</span><br><span class="line">QT_IM_MODULE=fcitx</span><br><span class="line">XMODIFIERS=@im=fcitx&quot; &gt; .pam_environment</span><br><span class="line"></span><br><span class="line">echo &quot;export GTK_IM_MODULE=fcitx</span><br><span class="line">export QT_IM_MODULE=fcitx</span><br><span class="line">export XMODIFIERS=@im=fcitx&quot; &gt; .xprofile</span><br><span class="line"></span><br><span class="line">reboot</span><br><span class="line"></span><br><span class="line"># 重启后的检查</span><br><span class="line">ps aux |grep fcitx</span><br><span class="line">ps aux |grep sogou   ;sogou-qimpanel, 搜狗输入法窗口</span><br><span class="line">fcitx-configtool  ;add sogou</span><br><span class="line">ctrl + space 切换输入法试试</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ArchLinux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sogou </tag>
            
            <tag> 搜狗 </tag>
            
            <tag> 输入法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>archlinux安装chrome谷歌浏览器</title>
      <link href="/2019/08/05/archlinux-google-chrome/"/>
      <url>/2019/08/05/archlinux-google-chrome/</url>
      
        <content type="html"><![CDATA[<p>安装好用又好看的google chrome谷歌浏览器，需要在已经安装了桌面环境，这常识应该都知道吧</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># add official archlinuxcn mirror</span><br><span class="line">echo &quot;[archlinuxcn]</span><br><span class="line">Server = https://cdn.repo.archlinuxcn.org/$arch&quot; &gt;&gt; /etc/pacman.conf</span><br><span class="line"></span><br><span class="line"># update package db, install key for check downloaded package</span><br><span class="line">pacman -Sy</span><br><span class="line">pacman -S archlinuxcn-keyring</span><br><span class="line"></span><br><span class="line">pacman -S google-chrome</span><br></pre></td></tr></table></figure><p>如果安装谷歌浏览器图标不正常，看看图标文件存在了，再执行下面命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/share/icons/hicolor/48x48/apps/google-chrome.png /usr/share/pixmaps/</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ArchLinux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> chrome </tag>
            
            <tag> 谷歌 </tag>
            
            <tag> 图标 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>archlinux开启ssh远程连接服务</title>
      <link href="/2019/08/05/archlinux-ssh/"/>
      <url>/2019/08/05/archlinux-ssh/</url>
      
        <content type="html"><![CDATA[<p>在启动到archiso的live安装环境，也可以打开ssh，远程连接后进行安装，方便</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 远程连接必须设置密码，root登录需要配置 /etc/ssh/sshd_config PermitRootLogin yes</span><br><span class="line">sed -i -e &#x27;s/#PermitRootLogin .*$/PermitRootLogin yes/&#x27; /etc/ssh/sshd_config</span><br><span class="line"># live的sshd已经配置好，直接连接</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">passwd</span><br><span class="line">systemctl start sshd</span><br><span class="line"></span><br><span class="line"># show ip addr</span><br><span class="line">ip -4 addr</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ArchLinux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ssh </tag>
            
            <tag> sshd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>efi方式，安装archlinux，需要主板支持，目前新的主板都可以</title>
      <link href="/2019/08/05/archlinux-efi/"/>
      <url>/2019/08/05/archlinux-efi/</url>
      
        <content type="html"><![CDATA[<p>efi是新一代的bios标准与磁盘标准，是未来的趋势，硬盘使用gpt管理分区，避免mbr的分区数量，分区大小限制</p><p>efi启动方式简介，开机按钮，bios后，bios会在gpt分区的硬盘上找esp（EFI system partition）分区，分区格式fat32，格式简单方便处理。bios启动esp分区下的\efi\boot\bootx64.efi文件，开始系统引导。比mbr的磁盘分区字节搜索方式更高级，智能。</p><p>efi最少需要两个分区，一个esp启动分区，一个系统分区，【需要主板支持】，新的主板的【csm模式】就是为了兼容老的mbr legacy启动方式<br>有些命令可以看<a href="https://qianggetaba.com/2019/08/05/archlinux-mbr/">mbr方式，简单快速安装archlinux</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"># 启动进入live 环境</span><br><span class="line"></span><br><span class="line">ping www.baidu.com</span><br><span class="line"></span><br><span class="line">wipefs -a /dev/sda</span><br><span class="line"></span><br><span class="line"># partition, 256M for esp partition, g make disk to gpt</span><br><span class="line">fdisk /dev/sda</span><br><span class="line">g</span><br><span class="line">n</span><br><span class="line">enter</span><br><span class="line">enter</span><br><span class="line">+256M</span><br><span class="line">n</span><br><span class="line">enter</span><br><span class="line">enter</span><br><span class="line">+100G</span><br><span class="line">w</span><br><span class="line"></span><br><span class="line"># sda1 is esp</span><br><span class="line">mkfs.fat -F32 /dev/sda1  ;format esp</span><br><span class="line">mkfs.ext4 /dev/sda2</span><br><span class="line"></span><br><span class="line"># mount order</span><br><span class="line">mount /dev/sda2 /mnt </span><br><span class="line">mkdir /mnt/boot</span><br><span class="line">mount /dev/sda1 /mnt/boot</span><br><span class="line"></span><br><span class="line">sed -i &#x27;6iServer = http://mirrors.163.com/archlinux/$repo/os/$arch&#x27; /etc/pacman.d/mirrorlist </span><br><span class="line"></span><br><span class="line">pacman -Sy</span><br><span class="line">pacstrap -i /mnt base base-devel</span><br><span class="line">genfstab -U /mnt &gt;&gt; /mnt/etc/fstab</span><br><span class="line"></span><br><span class="line">arch-chroot /mnt</span><br><span class="line"></span><br><span class="line"># timezone</span><br><span class="line">ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class="line"></span><br><span class="line"># system support lang</span><br><span class="line">sed -i -e &#x27;s/#en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/&#x27; /etc/locale.gen</span><br><span class="line">sed -i -e &#x27;s/#zh_CN.UTF-8 UTF-8/zh_CN.UTF-8 UTF-8/&#x27; /etc/locale.gen</span><br><span class="line">locale-gen</span><br><span class="line"></span><br><span class="line"># misc 杂项配置</span><br><span class="line">echo &quot;LANG=en_US.UTF-8&quot; &gt;&gt; /etc/locale.conf</span><br><span class="line">echo &quot;myarch&quot; &gt;&gt; /etc/hostname</span><br><span class="line">echo &quot;127.0.0.1  localhost&quot; &gt;&gt; /etc/hosts</span><br><span class="line">echo &quot;::1 localhost&quot; &gt;&gt; /etc/hosts</span><br><span class="line">echo &quot;127.0.1.1 myarch.localdomain myarch&quot; &gt;&gt; /etc/hosts</span><br><span class="line"></span><br><span class="line"># initramfs</span><br><span class="line">mkinitcpio -p linux</span><br><span class="line"></span><br><span class="line"># root password</span><br><span class="line">echo &quot;root:ergdgfd!#&quot; | chpasswd</span><br><span class="line"></span><br><span class="line"># os-prober for windows dual boot search</span><br><span class="line">pacman -S grub efibootmgr dosfstools os-prober mtools</span><br><span class="line">grub-install --target=x86_64-efi  --efi-directory=/boot --bootloader-id=GRUB  --recheck</span><br><span class="line">os-prober</span><br><span class="line">grub-mkconfig -o /boot/grub/grub.cfg</span><br><span class="line"></span><br><span class="line">exit</span><br><span class="line"></span><br><span class="line">reboot</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Done!</p>]]></content>
      
      
      <categories>
          
          <category> ArchLinux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> efi </tag>
            
            <tag> 安装 </tag>
            
            <tag> efi启动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mbr方式，简单快速安装archlinux</title>
      <link href="/2019/08/05/archlinux-mbr/"/>
      <url>/2019/08/05/archlinux-mbr/</url>
      
        <content type="html"><![CDATA[<p>mbr方式，就是比较传统古老的启动方式，一块硬盘只能有4个主分区，或者3个主分区，一个扩展分区，扩展分区内，才能建立多个小分区。这个由于mbr的协议的限制的。<br><a href="https://en.wikipedia.org/wiki/Master_boot_record">Master boot record–mbr</a></p><p>下面的shell安装命令，不是很复杂，第一次尝鲜archlinux还是用有线网络，或者虚拟机的nat网络，因为安装过程需要联网下载系统包。</p><p>下面的安装是在一块硬盘上安装，熟悉过程后，可以自己适当修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"># 用iso或者 rufus把iso写入的启动upan，进入live环境</span><br><span class="line"></span><br><span class="line"># test internet</span><br><span class="line">ping www.baidu.com</span><br><span class="line"></span><br><span class="line"># delete all partition in /dev/sda</span><br><span class="line">wipefs -a /dev/sda</span><br><span class="line"></span><br><span class="line"># partition, use whole disk</span><br><span class="line">fdisk /dev/sda</span><br><span class="line">n</span><br><span class="line">p</span><br><span class="line">enter</span><br><span class="line">enter</span><br><span class="line">enter</span><br><span class="line">w</span><br><span class="line"></span><br><span class="line"># format partition and mount</span><br><span class="line">mkfs.ext4 /dev/sda1</span><br><span class="line">mount /dev/sda1 /mnt</span><br><span class="line"></span><br><span class="line"># add china local mirror url to line 6 of mirrorlist</span><br><span class="line">sed -i &#x27;6iServer = http://mirrors.163.com/archlinux/$repo/os/$arch&#x27; /etc/pacman.d/mirrorlist</span><br><span class="line"></span><br><span class="line"># download package db, so pacman can know package and its dependency</span><br><span class="line">pacman -Sy</span><br><span class="line"></span><br><span class="line"># install base package to disk, like kernel, glibc, coreutils .etc</span><br><span class="line">pacstrap -i /mnt base base-devel</span><br><span class="line"></span><br><span class="line"># partition table to fstab, when system boot can auto mount partition </span><br><span class="line">genfstab -U /mnt &gt;&gt; /mnt/etc/fstab</span><br><span class="line"></span><br><span class="line"># go into disk system enviroment</span><br><span class="line">arch-chroot /mnt</span><br><span class="line"></span><br><span class="line"># timezone</span><br><span class="line">ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class="line"></span><br><span class="line"># system support lang</span><br><span class="line">sed -i -e &#x27;s/#en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/&#x27; /etc/locale.gen</span><br><span class="line">sed -i -e &#x27;s/#zh_CN.UTF-8 UTF-8/zh_CN.UTF-8 UTF-8/&#x27; /etc/locale.gen</span><br><span class="line">locale-gen</span><br><span class="line"></span><br><span class="line"># misc 杂项配置</span><br><span class="line">echo &quot;LANG=en_US.UTF-8&quot; &gt;&gt; /etc/locale.conf</span><br><span class="line">echo &quot;myarch&quot; &gt;&gt; /etc/hostname</span><br><span class="line">echo &quot;127.0.0.1  localhost&quot; &gt;&gt; /etc/hosts</span><br><span class="line">echo &quot;::1 localhost&quot; &gt;&gt; /etc/hosts</span><br><span class="line">echo &quot;127.0.1.1 myarch.localdomain myarch&quot; &gt;&gt; /etc/hosts</span><br><span class="line"></span><br><span class="line"># initramfs</span><br><span class="line">mkinitcpio -p linux</span><br><span class="line"></span><br><span class="line"># root password</span><br><span class="line">echo &quot;root:ergdgfd!#&quot; | chpasswd</span><br><span class="line"></span><br><span class="line"># install grub bootloader, i386-pc is also for x86_64 arch</span><br><span class="line">pacman -S grub</span><br><span class="line">grub-install --target=i386-pc /dev/sda</span><br><span class="line">grub-mkconfig -o /boot/grub/grub.cfg</span><br><span class="line"></span><br><span class="line"># quit to live system</span><br><span class="line">exit</span><br><span class="line"></span><br><span class="line">reboot</span><br><span class="line"></span><br><span class="line"># after reboot, log in and playaround</span><br></pre></td></tr></table></figure><p>Enjoy!</p>]]></content>
      
      
      <categories>
          
          <category> ArchLinux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安装 </tag>
            
            <tag> mbr </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ArchLinux</title>
      <link href="/2019/08/05/ArchLinux/"/>
      <url>/2019/08/05/ArchLinux/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.archlinux.org/">ArchLinux</a></p><p>archlinux，像debian是比较【根本】的系统，就像其他linux发行版是基于他们的。</p><p>安装arch需要一定的linux基础，比如连接网络，分区，安装bootloader引导，不是很难，主要是比较小巧，不像ubuntu一样，一安装桌面就是一大堆2,3千的包。arch就是按需安装，当前有的依赖的lib需要安装一下，arch也有包管理器pacman，不要怕</p><p>archlinux目前只支持x86_64架构，基本都是64位cpu够快</p>]]></content>
      
      
      <categories>
          
          <category> ArchLinux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ArchLinux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/08/04/hello-world/"/>
      <url>/2019/08/04/hello-world/</url>
      
        <content type="html"><![CDATA[<p><code>Hello World</code> is simple, but <code>Make world</code> is better.</p><p>建站命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S nodejs npm</span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br><span class="line">npx -v</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">cd proj</span><br><span class="line">hexo init myblog</span><br><span class="line">cd myblog</span><br><span class="line">npm install</span><br><span class="line">hexo server</span><br><span class="line"></span><br><span class="line">hexo generate  ;hexo g for short,static pages, upload public to gitpages</span><br><span class="line"></span><br><span class="line">hexo n &quot;文章标题&quot;  ;new article, \Hexo\source\_posts , .md</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g &amp; hexo s</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 使用dev分支保存git pages 源码，master为生成的git pages的静态html文件</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; git checkout master &amp;&amp; rm -rf 2019 archives categories css img index.html js page tags &amp;&amp; cp -r public/* . &amp;&amp; git add . &amp;&amp; git commit -m &quot;update&quot; &amp;&amp; git push &amp;&amp; git checkout dev</span><br><span class="line"></span><br><span class="line"># for windows</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; git checkout master</span><br><span class="line">rd /s /q 2019 archives categories css img js page tags</span><br><span class="line">del /f index.html</span><br><span class="line">move public\2019 .</span><br><span class="line">move public\archives .</span><br><span class="line">move public\categories .</span><br><span class="line">move public\css .</span><br><span class="line">move public\img .</span><br><span class="line">move public\js .</span><br><span class="line">move public\page .</span><br><span class="line">move public\tags .</span><br><span class="line">move public\index.html .</span><br><span class="line">git add . &amp;&amp; git commit -m &quot;update&quot; &amp;&amp; git push &amp;&amp; git checkout dev</span><br></pre></td></tr></table></figure><p>最后的命令是upload public to gitpage<br>需要把gitpage的master分支public目录放到gitignore，不然，复制的public就没有更新到gitpage</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
